LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 1

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

  1:Name     Z80_MEMCTRL;
  2:PartNo   Z80_MEMCTRL;
  3:Date     05/10/2022;
  4:Revision 01;
  5:Designer Sponaugle;
  6:Company  Ratiometric;
  7:Assembly None;
  8:Location None;
  9:Device   f1508ispplcc84;
 10:
 11:PROPERTY ATMEL {TDI_PULLUP = ON};
 12:PROPERTY ATMEL {TMS_PULLUP = ON};
 13:PROPERTY ATMEL {open_collector=Z80_INT,Z80_NMI};
 14:
 15:Pin[83]     = CLK_IN;                  /* 28.322Mhz input clock  - Master Clock */
 16:Pin[4,5,6,8,9,10,11,12,15,16,17,18,20,21,22,24]     = [Z80_A15..0];
 17:Pin[25]     = Z80_CLK;             /* Z80 clock is CLK_IN/16, with with a 28.322MHz src output will be 1.77Mhz */
 18:Pin[27,28,29,30,31,33,34,35]     = [Z80_D7..0]; 
 19:Pin[36]     = Z80_MEMREQ;
 20:Pin[37]     = Z80_IOREQ;
 21:Pin[39]     = Z80_RD;
 22:Pin[40]     = Z80_WR;
 23:Pin[84]     = Z80_RFSH;
 24:
 25:Pin[41]     = Z80_NMI;
 26:Pin[44]     = Z80_INT;
 27:
 28:Pin[50]     = SEVENSEG_A_CS;
 29:Pin[51]     = SEVENSEG_B_CS;
 30:Pin[54]     = SRAM_CS;
 31:Pin[55]     = FLASH_CS;
 32:Pin[56]     = KEYBOARD_CS;
 33:Pin[57]     = VID_MEM_CS;                  /* Chip select for Video Memory Read/Write operation */
 34:Pin[58]     = VID_80X25MEM_CS;
 35:Pin[68]     = VID_RW;                   /* 0=READ 1=WRITE */
 36:Pin[70]     = VID_IO_CS;
 37:
 38:Pin[61,63,64,65,67]     = [SRAM_FLASH_PAGE_A14..18];
 39:
 40:Pin[45]    = CASS_OUT_D0;
 41:Pin[46]    = CASS_OUT_D1;
 42:Pin[48]    = CASS_OUT_D2;
 43:Pin[49]    = CASS_IN_D7;
 44:Pin[60]    = V64_32_VIDEO_MODE;
 45:
 46:Pin[69]    = SYS_RESET;
 47:Pin[1]     = RESET_BTN_IN;      /* Active Low Reset Button, with DS zero hold circuit */
 48:Pin[2]     = DEBUG_BTN_IN;      /* Active Low Debug NMI button.  Debounce but no hold circutry */
 49:
 50:Pin[73]    = EXP_EN;
 51:
 52:Pin[74]    = VID_CPLD_4;
 53:Pin[75]    = VID_CPLD_5;

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 2

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

 54:Pin[76]    = RTC_CS;
 55:Pin[77]    = RTC_AS;
 56:Pin[79]    = RTC_DS;
 57:Pin[80]    = RTC_A_LATCH;
 58:Pin[81]    = UNUSED1_IO;
 59:Pin[52]    = UNUSED2_IO;
 60:
 61:
 62:
 63:
 64:/* This definition forces A8 and A9 to be assigned to pin inputs for later use.  In the current design they are not needed for
 65:        chip select creation. */
 66:
 67:UNUSED1_IO = Z80_A8 # Z80_A9;
 68:UNUSED2_IO = Z80_A8 & Z80_A9;
 69:
 70:
 71:/* Hold values to force output pin creation. */
 72:Z80_INT = 'b'1;
 73:EXP_EN = 'b'0;
 74:VID_CPLD_4 = 'b'1;
 75:VID_CPLD_5 = 'b'1;
 76:
 77:/* Internal nodes (FLIP-FLOPS) */
 78:
 79:NODE    CLK_DIV2,CLK_DIV4,CLK_DIV8,CLK_DIV16;
 80:NODE    [REGION0_CONFIG7..0];
 81:NODE    [REGION1_CONFIG7..0];
 82:NODE    [REGION2_CONFIG7..0];
 83:NODE    [REGION3_CONFIG7..0];
 84:NODE    [SYSTEM_CONFIG7..0];
 85:
 86:FIELD cpu_address_bus = [Z80_A15..0];
 87:
 88:CLK_DIV2.d = !CLK_DIV2;             /* DIV2 = 14.161 Mhz */
 89:CLK_DIV2.ck = CLK_IN;
 90:
 91:CLK_DIV4.d = !CLK_DIV4;             /* DIV2 = 7.0805 Mhz */
 92:CLK_DIV4.ck = CLK_DIV2;
 93:
 94:CLK_DIV8.d = !CLK_DIV8;             /* DIV2 = 3.54025 Mhz */
 95:CLK_DIV8.ck = CLK_DIV4;
 96:
 97:CLK_DIV16.d = !CLK_DIV16;             /* DIV2 = 1.77 Mhz */
 98:CLK_DIV16.ck = CLK_DIV8;
 99:
100:
101:/* Generate CPU clock based on config regster:
102:
103:     bit 0,1:  CPU Speed
104:                    00 = Divide/16
105:                    01 = Divide/8
106:                    10 = Divide/4
107:                    11 = Divide/2

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 3

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

108:
109:*/
110:
111:
112:Z80_CLK = (!SYSTEM_CONFIG1 & !SYSTEM_CONFIG0 & CLK_DIV16)
113:        # (!SYSTEM_CONFIG1 & SYSTEM_CONFIG0 & CLK_DIV8)
114:        # (SYSTEM_CONFIG1 & !SYSTEM_CONFIG0 & CLK_DIV4)
115:        # (SYSTEM_CONFIG1 & SYSTEM_CONFIG0 & CLK_DIV2);
116:
117:/* CLK_DIV2_OUT = CLK_DIV2; */
118:
119:ISMEMORYACCESS = !Z80_MEMREQ & Z80_RFSH;
120:ISIOACCESS = !Z80_IOREQ  & Z80_RFSH;
121:
122:/* NMAP_HARDWARE_ACCESS == 1 if there is a memory accces to the hardware mmap region (0x3800-0x3FFF) AND the REGION 0 bit to all 
123:   hardware acesss is REGION0_CONFIG7==1 */
124:
125:
126:MMAP_HARDWARE_ACCESS = !REGION0_CONFIG7 & ISMEMORYACCESS & 
127:                                        (cpu_address_bus:'h'38XX
128:                                       # cpu_address_bus:'h'39XX
129:                                       # cpu_address_bus:'h'3AXX
130:                                       # cpu_address_bus:'h'3BXX
131:                                       # cpu_address_bus:'h'3CXX
132:                                       # cpu_address_bus:'h'3DXX
133:                                       # cpu_address_bus:'h'3EXX
134:                                       # cpu_address_bus:'h'3FXX);
135:
136:
137:
138:/* IO Write to IO address 0x75 and 0x76 go to the 7-Segment Display connector. For debugging, POST codes */
139:
140:SEVENSEG_A_CS = !(ISIOACCESS & !Z80_WR &  (cpu_address_bus:'h'XX75 
141:                            ));
142:
143:SEVENSEG_B_CS = !(ISIOACCESS & !Z80_WR &  (cpu_address_bus:'h'XX76 
144:                            ));
145:
146:
147:/* These Regionx_CSs are low when a given memory access is in progress to that region.
148:   For Region 0, if the MMAP_HARDWARE_ACCESS ==1 the access is to a hardware memory mapped
149:   device in Region 0, so we should not enable SRAM or FLASH for Region 0 */
150:
151:NODE REGION0_CS,REGION1_CS, REGION2_CS, REGION3_CS;
152:
153:REGION0_CS = !(ISMEMORYACCESS & !MMAP_HARDWARE_ACCESS & (cpu_address_bus:'h'0XXX
154:                                                        # cpu_address_bus:'h'1XXX
155:                                                        # cpu_address_bus:'h'2XXX
156:                                                        # cpu_address_bus:'h'3XXX
157:                                                        ));
158:
159:REGION1_CS = !(ISMEMORYACCESS & (cpu_address_bus:'h'4XXX
160:                               # cpu_address_bus:'h'5XXX
161:                               # cpu_address_bus:'h'6XXX

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 4

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

162:                               # cpu_address_bus:'h'7XXX
163:                               ));
164:REGION2_CS = !(ISMEMORYACCESS & (cpu_address_bus:'h'8XXX
165:                               # cpu_address_bus:'h'9XXX
166:                               # cpu_address_bus:'h'AXXX
167:                               # cpu_address_bus:'h'BXXX
168:                               ));
169:REGION3_CS = !(ISMEMORYACCESS & (cpu_address_bus:'h'CXXX
170:                               # cpu_address_bus:'h'DXXX
171:                               # cpu_address_bus:'h'EXXX
172:                               # cpu_address_bus:'h'FXXX
173:                               ));
174:
175:/* Based on the Region config for each region, determine if a SRAM acesss is in order */
176:
177:SRAM_CS = (REGION0_CS # !REGION0_CONFIG6) &
178:          (REGION1_CS # !REGION1_CONFIG6) &
179:          (REGION2_CS # !REGION2_CONFIG6) &
180:          (REGION3_CS # !REGION3_CONFIG6);
181:
182:FLASH_CS = (REGION0_CS # REGION0_CONFIG6) &
183:           (REGION1_CS # REGION1_CONFIG6) &
184:           (REGION2_CS # REGION2_CONFIG6) &
185:          ( REGION3_CS # REGION3_CONFIG6);
186:
187:SRAM_FLASH_PAGE_A14 = ((!REGION0_CS) & REGION0_CONFIG0 ) #
188:                      ((!REGION1_CS) & REGION1_CONFIG0 ) #
189:                      ((!REGION2_CS) & REGION2_CONFIG0 ) #
190:                      ((!REGION3_CS) & REGION3_CONFIG0 );
191:
192:SRAM_FLASH_PAGE_A15 = ((!REGION0_CS) & REGION0_CONFIG1 ) #
193:                      ((!REGION1_CS) & REGION1_CONFIG1 ) #
194:                      ((!REGION2_CS) & REGION2_CONFIG1 ) #
195:                      ((!REGION3_CS) & REGION3_CONFIG1 );
196:
197:SRAM_FLASH_PAGE_A16 = ((!REGION0_CS) & REGION0_CONFIG2 ) #
198:                      ((!REGION1_CS) & REGION1_CONFIG2 ) #
199:                      ((!REGION2_CS) & REGION2_CONFIG2 ) #
200:                      ((!REGION3_CS) & REGION3_CONFIG2 );
201:
202:SRAM_FLASH_PAGE_A17 = ((!REGION0_CS) & REGION0_CONFIG3 ) #
203:                      ((!REGION1_CS) & REGION1_CONFIG3 ) #
204:                      ((!REGION2_CS) & REGION2_CONFIG3 ) #
205:                      ((!REGION3_CS) & REGION3_CONFIG3 );
206:
207:SRAM_FLASH_PAGE_A18 = ((!REGION0_CS) & REGION0_CONFIG4 ) #
208:                      ((!REGION1_CS) & REGION1_CONFIG4 ) #
209:                      ((!REGION2_CS) & REGION2_CONFIG4 ) #
210:                      ((!REGION3_CS) & REGION3_CONFIG4 );
211:
212:
213:KEYBOARD_CS = !(!Z80_MEMREQ & !Z80_RD & MMAP_HARDWARE_ACCESS & (cpu_address_bus:'h'38XX
214:                                                        # cpu_address_bus:'h'39XX
215:                                                        # cpu_address_bus:'h'3AXX

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 5

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

216:                                                        # cpu_address_bus:'h'3BXX
217:                                                        ));
218:
219:VID_80X25MEM_CS = 'b'0;
220:
221:VID_MEM_ACCESS = !(!Z80_MEMREQ & MMAP_HARDWARE_ACCESS & (cpu_address_bus:'h'3CXX
222:                                                    # cpu_address_bus:'h'3DXX 
223:                                                    # cpu_address_bus:'h'3EXX 
224:                                                    # cpu_address_bus:'h'3FXX 
225:                                                    ));
226:
227:/* We will delay the VID_MEM_CS signal until the next rising Z80_CLK edge so we can syncronize with a VID_RW signal */
228:
229:VID_MEM_CS.d  = VID_MEM_ACCESS;
230:VID_MEM_CS.ap = VID_MEM_ACCESS;
231:VID_MEM_CS.ck = Z80_CLK;
232:
233:/* 
234:   The VID_RW signal is constructed from the VID_MEM_ACCESS signal combined with the Z80_RD signal.   If the CPU is doing a read 
235:   operation the Z80_RD signal will be low, forcing this signal to be high (==READ).   If the Z80_RD signal is high and the Z80_RFSH
236:   signal is also high the must be a memory write cycle.   We set the VID_RW signal low to indicate the write cycle.   The reason
237:   for all of this work is because the Z80 normally does not assert the Z80_WR signal during a write operation until one full cycle 
238:   after the fall of the MEM_REQ signal.  This signal will give a 1/2 clock cycle advantage during a write.
239:
240:   Since this is the only RW signal to the video controller, we need to make it also work for IO Access (VID_IO_ACCESS).  If
241:   VID_IO_CS is active, we will make the VID_RW signal just the CPU_WR signal.
242:*/
243:NODE VID_RW_GATE;
244:
245:VID_RW_GATE.d  = VID_MEM_ACCESS # !Z80_RFSH # !Z80_RD;
246:VID_RW_GATE.ap = VID_MEM_ACCESS;
247:VID_RW_GATE.ck = Z80_CLK;
248:
249:VID_RW = (!VID_MEM_ACCESS & VID_RW_GATE) # (!VID_IO_CS & Z80_WR);
250:
251:VID_IO_CS = !(ISIOACCESS &  (cpu_address_bus:'h'XX7A
252:                            # cpu_address_bus:'h'XX7B
253:                            # cpu_address_bus:'h'XX7C
254:                            # cpu_address_bus:'h'XX7D
255:                            ));
256:
257:
258:
259:/* RTC_A_LATCH latches what is on the data bus into the address latch for the RTC */
260:
261:RTC_A_LATCH = !(ISIOACCESS & !Z80_WR & (cpu_address_bus:'h'XX77));
262:
263:/*  
264:    RTC_CS selects the RTC to allow the CPU to read/write the RTC.
265:    RTC_AS is clocked with the 0 from CS on the falling clock edge, providing a slight
266:    delay between the assertion of CS and the assertion of AS(low).  AS will go back to one
267:    when RTC_CS goes to 1. 
268:    
269:    RTC_DS is built up from two signals, DS_0 and DS_1.  Both DS_0 and DS_1 are ==1 before a transaction. 

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 6

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

270:    DS_0 goes to zero one half-clock cycle after AS goes to 0.  DS_1 goes to zero one half-clock 
271:    cycle after DS_0.  DS_0#!DS_1 nets you a half cycle long pulse on DS after AS.
272:
273:*/
274:
275:NODE RTC_DS_0, RTC_DS_1, RTC_AS_0, RTC_AS_1;
276:
277:RTC_CS = !(ISIOACCESS &  (cpu_address_bus:'h'XX78));
278:
279:/* This will create a pulse on AS that starts just after CS falls and lasts until the next rising
280:   clock edge of Z80_CLK .*/
281:
282:RTC_AS_0.d = 'b'1;
283:RTC_AS_0.ck = !RTC_CS;
284:RTC_AS_0.ar = RTC_DS_1 # !SYS_RESET;
285:
286:RTC_AS_1.d = RTC_AS_0;
287:RTC_AS_1.ck = Z80_CLK;
288:RTC_AS_1.ar = RTC_DS_1 # !SYS_RESET;
289:
290:RTC_AS = RTC_AS_0 & !RTC_AS_1 & !RTC_CS;
291:
292:RTC_DS_0.d = !RTC_CS;
293:RTC_DS_0.ck = !Z80_CLK;
294:RTC_DS_0.ar = RTC_CS # !SYS_RESET;
295:
296:RTC_DS_1.d = RTC_DS_0;
297:RTC_DS_1.ck = !Z80_CLK;
298:RTC_DS_1.ar = RTC_CS # !SYS_RESET;
299:
300:RTC_DS = RTC_DS_1;
301:
302:
303:
304:/* to allow the CPU to read from the cassette port we need to turn off/on the oe for the databus. */
305:
306:IO_CASS_CS_WR = !(ISIOACCESS & !Z80_WR &  (cpu_address_bus:'h'XXFC
307:                            # cpu_address_bus:'h'XXFD
308:                            # cpu_address_bus:'h'XXFE
309:                            # cpu_address_bus:'h'XXFF 
310:                            ));
311:
312:IO_CASS_CS_RD = !(ISIOACCESS & !Z80_RD &  (cpu_address_bus:'h'XXFC
313:                            # cpu_address_bus:'h'XXFD
314:                            # cpu_address_bus:'h'XXFE
315:                            # cpu_address_bus:'h'XXFF 
316:                            ));
317:
318:SREG_CS_RD = !(ISIOACCESS & !Z80_RD & (cpu_address_bus:'h'XX74));
319:
320:/* 
321:This section contains all of the register that can be read back by the CPU.  The D0-D7 pins are bi-directional, 
322:and if the .oe pin is high they are enabled for output.  If the CPU is reading from the cassette, system-register, 
323:or region-config-register0, those bits are put on the databus. 

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 7

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

324:*/
325:
326:[Z80_D7..0].oe = (!IO_CASS_CS_RD) # (!SREG_CS_RD) # (!REGION0_CONFIG_RD);
327:
328:Z80_D0 = ((!IO_CASS_CS_RD) & 'b'0) # 
329:         ((!SREG_CS_RD) & SYSTEM_CONFIG0) # 
330:         ((!REGION0_CONFIG_RD) & REGION0_CONFIG0);
331:Z80_D1 = ((!IO_CASS_CS_RD) & 'b'0) # 
332:         ((!SREG_CS_RD) & SYSTEM_CONFIG1) # 
333:         ((!REGION0_CONFIG_RD) & REGION0_CONFIG1);
334:Z80_D2 = ((!IO_CASS_CS_RD) & 'b'0) # 
335:         ((!SREG_CS_RD) & SYSTEM_CONFIG2) # 
336:         ((!REGION0_CONFIG_RD) & REGION0_CONFIG2);
337:Z80_D3 = ((!IO_CASS_CS_RD) & V64_32_VIDEO_MODE) # 
338:         ((!SREG_CS_RD) & SYSTEM_CONFIG3) # 
339:         ((!REGION0_CONFIG_RD) & REGION0_CONFIG3);
340:Z80_D4 = ((!IO_CASS_CS_RD) & 'b'0) # 
341:         ((!SREG_CS_RD) & SYSTEM_CONFIG4) # 
342:         ((!REGION0_CONFIG_RD) & REGION0_CONFIG4);
343:Z80_D5 = ((!IO_CASS_CS_RD) & 'b'0) # 
344:         ((!SREG_CS_RD) & SYSTEM_CONFIG5) # 
345:         ((!REGION0_CONFIG_RD) & REGION0_CONFIG5);
346:Z80_D6 = ((!IO_CASS_CS_RD) & V64_32_VIDEO_MODE) # 
347:         ((!SREG_CS_RD) & SYSTEM_CONFIG6) # 
348:         ((!REGION0_CONFIG_RD) & REGION0_CONFIG6);
349:Z80_D7 = ((!IO_CASS_CS_RD) & CASS_IN_D7) # 
350:         ((!SREG_CS_RD) & SYSTEM_CONFIG7) # 
351:         ((!REGION0_CONFIG_RD) & REGION0_CONFIG7);
352:
353:
354:/*
355:REGION Congig Register:
356:        bit 7 -    HARDWARE ENABLED in the PAGE. 1=HARDWARE OFF, 0=HARDWARE ON
357:        bit 6 -    0=FLASH, 1=SRAM
358:        bit 5 -    0=RO, 1=RW
359:        bit 4,3 
360:            2,1,0  5-bit page selection (16K page, 32 pages, 512k total)
361:
362:        REGION0 defaults to FLASH, and Hardware Enabled, RO.
363:        REGION1,2,3 defaults to SRAM, RW.
364:
365:*/
366:
367:REGION0_CONFIG_WR = !((ISIOACCESS & !Z80_WR) & (cpu_address_bus:'h'XX70));
368:REGION1_CONFIG_WR = !((ISIOACCESS & !Z80_WR) & (cpu_address_bus:'h'XX71));
369:REGION2_CONFIG_WR = !((ISIOACCESS & !Z80_WR) & (cpu_address_bus:'h'XX72));
370:REGION3_CONFIG_WR = !((ISIOACCESS & !Z80_WR) & (cpu_address_bus:'h'XX73));
371:
372:REGION0_CONFIG_RD = !((ISIOACCESS & !Z80_RD) & (cpu_address_bus:'h'XX70));
373:REGION1_CONFIG_RD = !((ISIOACCESS & !Z80_RD) & (cpu_address_bus:'h'XX71));
374:REGION2_CONFIG_RD = !((ISIOACCESS & !Z80_RD) & (cpu_address_bus:'h'XX72));
375:REGION3_CONFIG_RD = !((ISIOACCESS & !Z80_RD) & (cpu_address_bus:'h'XX73));
376:
377:

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 8

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

378:[REGION0_CONFIG7..0].ck = REGION0_CONFIG_WR;
379:[REGION0_CONFIG7..0].d = [Z80_D7..0].io;
380:[REGION0_CONFIG5..0].ar = !SYS_RESET;
381:REGION0_CONFIG6.ar = !SYS_RESET;
382:REGION0_CONFIG7.ar = !SYS_RESET;
383:
384:[REGION1_CONFIG7..0].ck = REGION1_CONFIG_WR;
385:[REGION1_CONFIG7..0].d = [Z80_D7..0].io;
386:[REGION1_CONFIG4..0].ar = !SYS_RESET;
387:REGION1_CONFIG5.ap = !SYS_RESET;
388:REGION1_CONFIG6.ap = !SYS_RESET;
389:REGION1_CONFIG7.ar = !SYS_RESET;
390:
391:[REGION2_CONFIG7..0].ck = REGION2_CONFIG_WR;
392:[REGION2_CONFIG7..0].d = [Z80_D7..0].io;
393:[REGION2_CONFIG4..0].ar = !SYS_RESET;
394:REGION2_CONFIG5.ap = !SYS_RESET;
395:REGION2_CONFIG6.ap = !SYS_RESET;
396:REGION2_CONFIG7.ar = !SYS_RESET;
397:
398:[REGION3_CONFIG7..0].ck = REGION3_CONFIG_WR;
399:[REGION3_CONFIG7..0].d = [Z80_D7..0].io;
400:[REGION3_CONFIG4..0].ar = !SYS_RESET;
401:REGION3_CONFIG5.ap = !SYS_RESET;
402:REGION3_CONFIG6.ap = !SYS_RESET;
403:REGION3_CONFIG7.ar = !SYS_RESET;
404:
405:/* System Configuration Registers - 
406:        bit 0,1:  CPU Speed
407:                    00 = Divide/16
408:                    01 = Divide/8
409:                    10 = Divide/4
410:                    11 = Divide/2
411:*/
412:
413:[SYSTEM_CONFIG7..0].ck = !((ISIOACCESS & !Z80_WR) & (cpu_address_bus:'h'XX74));
414:[SYSTEM_CONFIG7..0].d = [Z80_D7..0].io;
415:[SYSTEM_CONFIG7..0].ar = !SYS_RESET;
416:
417:CASS_OUT_D0.d = Z80_D0.io;
418:CASS_OUT_D0.ck = IO_CASS_CS_WR;
419:CASS_OUT_D1.d = Z80_D1.io;
420:CASS_OUT_D1.ck = IO_CASS_CS_WR;
421:CASS_OUT_D2.d = Z80_D2.io;
422:CASS_OUT_D2.ck = IO_CASS_CS_WR;
423:
424:V64_32_VIDEO_MODE.d = Z80_D3.io;
425:V64_32_VIDEO_MODE.ck = IO_CASS_CS_WR;
426:
427:Z80_NMI.d = DEBUG_BTN_IN;
428:Z80_NMI.ck = CLK_DIV16;
429:Z80_NMI.ap = !SYS_RESET;
430:
431:SYS_RESET.d = RESET_BTN_IN;

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 9

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

432:SYS_RESET.ck = CLK_DIV16;
433:
434:/*
435:
436:Total dedicated input used:     4/4     (100%)
437:Total I/O pins used             64/64   (100%)
438:Total Logic cells used          88/128  (68%)
439:Total Flip-Flop used            55/128  (42%)
440:Total Foldback logic used       12/128  (9%)
441:Total Nodes+FB/MCells           100/128         (78%)
442:Total cascade used              0
443:Total input pins                29
444:Total output pins               39
445:Total Pts                       243
446:                                                                                    
447:                                        D R                                         
448:                                        E E        R                                
449:                                        B S      U T         V                      
450:                                        U E      N C         I                      
451:                                        G TZ     U _         D                      
452:                       Z  Z Z   Z Z Z   _ _8     S A         _                      
453:                     Z 8  8 8   8 8 8   B B0 C   E _ R   R R C                      
454:                     8 0  0 0   0 0 0   T T_ L   D L T   T T P                      
455:                     0 _  _ _   _ _ _   N NR K   1 A C   C C L                      
456:                     _ A  A A G A A A V _ _F _ G _ T _ V _ _ D                      
457:                     A 1  1 1 N 1 1 1 C I IS I N I C D C A C _                      
458:                     9 0  1 2 D 3 4 5 C N NH N D O H S C S S 5                      
459:                    -------------------------------------------                     
460:                   / 11   9   7   5   3   1  83  81  79  77  75 \                  
461:                  /    10   8   6   4   2  84  82  80  78  76    \                 
462:          Z80_A8 | 12                    (*)                   74 | VID_CPLD_4      
463:             VCC | 13                                          73 | EXP_EN          
464:             TDI | 14                                          72 | GND             
465:          Z80_A7 | 15                                          71 | TDO             
466:          Z80_A6 | 16                                          70 | VID_IO_CS       
467:          Z80_A5 | 17                                          69 | SYS_RESET       
468:          Z80_A4 | 18                                          68 | VID_RW          
469:             GND | 19                                          67 | SRAM_FLASH_PAGE_A18
470:          Z80_A3 | 20                                          66 | VCC             
471:          Z80_A2 | 21                                          65 | SRAM_FLASH_PAGE_A17
472:          Z80_A1 | 22                 ATF1508                  64 | SRAM_FLASH_PAGE_A16
473:             TMS | 23               84-Lead PLCC               63 | SRAM_FLASH_PAGE_A15
474:          Z80_A0 | 24                                          62 | TCK             
475:         Z80_CLK | 25                                          61 | SRAM_FLASH_PAGE_A14
476:             VCC | 26                                          60 | V64_32_VIDEO_MODE
477:          Z80_D7 | 27                                          59 | GND             
478:          Z80_D6 | 28                                          58 | VID_80X25MEM_CS 
479:          Z80_D5 | 29                                          57 | VID_MEM_CS      
480:          Z80_D4 | 30                                          56 | KEYBOARD_CS     
481:          Z80_D3 | 31                                          55 | FLASH_CS        
482:             GND | 32                                          54 | SRAM_CS         
483:                  \     34  36  38  40  42  44  46  48  50  52   /                 
484:                   \  33  35  37  39  41  43  45  47  49  51  53/                  
485:                    --------------------------------------------                     

LISTING FOR LOGIC DESCRIPTION FILE: MEMCTRL.pld                      Page 10

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Tue Sep 26 17:59:55 2023

486:                      Z Z Z Z Z V Z Z Z G V Z C C G C C S S U V                     
487:                      8 8 8 8 8 C 8 8 8 N C 8 A A N A A E E N C                     
488:                      0 0 0 0 0 C 0 0 0 D C 0 S S D S S V V U C                     
489:                      _ _ _ _ _   _ _ _     _ S S   S S E E S                       
490:                      D D D M I   R W N     I _ _   _ _ N N E                       
491:                      2 1 0 E O   D R M     N O O   O I S S D                       
492:                            M R       I     T U U   U N E E 2                       
493:                            R E               T T   T _ G G _                       
494:                            E Q               _ _   _ D _ _ I                       
495:                            Q                 D D   D 7 A B O                       
496:                                              0 1   2   _ _                         
497:                                                        C C                         
498:                                                        S S   
499:
500:*/
501:
502:
503:
504:
505:




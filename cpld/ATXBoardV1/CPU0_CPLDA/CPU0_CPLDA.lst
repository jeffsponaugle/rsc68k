LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 1

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

  1:Name     CPU0_CPLDA;
  2:PartNo   CPU0_CPLDA;
  3:Date     05/10/2023;
  4:Revision 01;
  5:Designer Sponaugle;
  6:Company  Ratiometric;
  7:Assembly None;
  8:Location None;
  9:Device   f1508ispplcc84;
 10:
 11:
 12:/* 
 13:   Version 1 for ATX PCB V1.0
 14:   FOR CPU0
 15:*/
 16:
 17:PROPERTY ATMEL {TDI_PULLUP = ON};
 18:PROPERTY ATMEL {TMS_PULLUP = ON};
 19:
 20:/** Inputs **/
 21:
 22:Pin[83]  = CLK_16M;      /* INPUT ONLY PIN 83 */ 
 23:Pin[84]  = SYS_RESET;    /* INPUT ONLY PIN 84 */ 
 24:Pin[2]   = CPU0_AS;       /* INPUT ONLY PIN 2 */ 
 25:Pin[5]   = CPU0_UDS;
 26:Pin[4]   = CPU0_LDS;
 27:Pin[1]   = CPU0_RW;       /* INPUT ONLY PIN 1 = read, 0 = write */ 
 28:Pin[17,18,20,21,22,24,25,27,28,29,30,31,33,34,35,36]  = [CPU0_A23..8];    /* 16 */
 29:Pin[37,39,40]  = [CPU0_FC2..0];    /* 3 */
 30:Pin[11,10,9,8]  = [CPU0_D3..0];     /* 4 */
 31:Pin[41]  = DTACK_FROM_INT;  /* DTACK signal from Interrupt Controller */
 32:
 33:/** Outputs **/
 34:
 35:Pin[15]  = MEM_OE;                  /* Invert CPU0_RW */
 36:Pin[45]  = CPU0_DTACK;
 37:Pin[70]  = DRAM_CS;
 38:Pin[76]  = FLASH_LOW_CS;
 39:Pin[75]  = FLASH_HIGH_CS;
 40:Pin[74]  = FLASH_A18;               /* Used to select lower or upper half of FLASH */
 41:Pin[80]  = LED_LATCH_CS;
 42:Pin[73]  = NIC_CS;             
 43:Pin[65]  = IDE_CSA;
 44:Pin[64]  = IDE_CSB;
 45:Pin[63]  = UART_CSA;
 46:Pin[61]  = UART_CSB;
 47:Pin[60]  = SEVENSEG_LATCH_CS;
 48:Pin[58]  = RTS_D_SEL;
 49:Pin[57]  = RTS_CS;
 50:Pin[56]  = RTS_A_SEL;
 51:Pin[77]  = PTC_CS;
 52:Pin[52]  = IDE_BUFFER_EN;
 53:Pin[55]  = IDE_WR;

LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 2

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

 54:Pin[68]  = ITC_CS;
 55:Pin[12]  = K8042_CS;    
 56:Pin[79]  = SRAM0_LOW_CS;
 57:Pin[81]  = SRAM0_HIGH_CS;
 58:
 59:/* Expansion BUS Signals */
 60:
 61:Pin[49]  = EXP_CS_A;   /* Expansion BUS Chip Select  */
 62:Pin[50]  = EXP_CS_B;   /* Expansion BUS Chip Select  */
 63:Pin[46]  = EXP_CS_C;   /* Used for VGA_CFG_CS, can be in any slot */
 64:Pin[48]  = EXP_CS_D;   /* Used for VGA_VRAM_CS, can be in any slot */
 65:Pin[67]  = EXP_DTACK_IN;      /* DTACK for Exp CS - Open Collector Input PULLUP NEEDED */
 66:
 67:
 68:Pin[51]  = EXP_BUS_DRIVERS_ADDR;      /* Enable for Signal + Address bus EXP BUS drivers */
 69:Pin[69]  = EXP_BUS_DRIVERS_DATA;      /* Enable for Data bus EXP BUS drivers */
 70:Pin[44]  = EXP_BUS_DRIVERS_RW;        /* R/-W direction signal for data bus EXP BUS drivers */
 71:
 72:Pin[54]  = NOTUSED1_IO; 
 73:Pin[6]   = NOTUSED2_IO;
 74:Pin[16]  = NOTUSED3_IO;
 75:
 76:
 77:
 78:/* 
 79:   For VGA we need two chip selects, plus a return DTACK signal.
 80:   CPU0_EXP_CS_D <- CPLD_CS_C (pin 48 on CPLD) ERROR!! REASSIGN and CHECK HARDWARE
 81:   CPU0_EXP_CS_C <- CPLD_CS_B (pin 46 on CPLD)
 82:   CPU0_VRAM_DTACK -> CPLD_1 (pin 49 on CPLD)
 83:*/
 84:
 85:/* Statements to force these pins to exist just as a holding for those pin assignments. */
 86:
 87:EXP_CS_A = EXP_DTACK_IN;
 88:EXP_CS_B = EXP_DTACK_IN;
 89:EXP_BUS_DRIVERS_ADDR = EXP_DTACK_IN;
 90:EXP_BUS_DRIVERS_DATA = EXP_DTACK_IN;
 91:EXP_BUS_DRIVERS_RW = CPU0_RW;
 92:
 93:/** Internal Variables and nodes **/
 94:
 95:NODE IDE_WR_DELAY1,IDE_WR_DELAY2;
 96:
 97:
 98:/* ISMEMORYACCESS is high if the FC bits indicate this is a memory access operation
 99:    and /AS is low.   FC is allowed to be any state except 111.
100:*/
101:
102:ISMEMORYACCESS = !(CPU0_FC2 & CPU0_FC1 & CPU0_FC0) & !CPU0_AS;
103:
104:/* DTACK driven back to the CPU based on what kind of access is happening. */
105:/* DTACK_MEMORY_0W is high if an access is happening that is 0W */
106:
107:DTACK_MEMORY_0W = !DRAM_CS # !FLASH_LOW_CS # !FLASH_HIGH_CS # !NIC_CS # !EXP_CS_C 

LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 3

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

108:                  # !SEVENSEG_LATCH_CS # !UART_CSA # !UART_CSB # !IDE_CSA # !IDE_CSB
109:                  # !LED_LATCH_CS # !RTS_CS # !PTC_CS  # !K8042_CS
110:                  # !FLASH_CONFIG_CLOCK # !ITC_CS;
111:
112:/* 
113:   If we are doing a 0W access, assert DTACK when /AS is asserted.
114:   Merge in DTACK_FROM_INT, which is a DTACK signal from the interrupt controller.  It is used
115:   during an interrupt acknowledgement cycle to indicate the data bus has the interrupt vector
116:   present.  It will only be asserted (0) by the interrupt controller during an interrupt acknowledgement 
117:   cycle.  No protection, so if DTACK_FROM_INT is asserted (0) at any other time it will effect
118:   other active transactions.
119:
120:   EXP_DTACK_D is a signal from the VRAM controller to restrict access to video memory during
121:   both horizontal and vertical activity.   If it is asserted and we are doing an access to VRAMM,
122:   it should be passed thru.
123:
124:*/
125:
126:CPU0_DTACK = !(DTACK_MEMORY_0W & !CPU0_AS) & DTACK_FROM_INT & (EXP_CS_D # EXP_DTACK_IN);
127:
128:/*
129:   MAP_FLASH_TO_ZERO starts out set to 0 (from the SYS_RESET), and switches to 1 as soon as a memory
130:   access occurs with the highest bit set to 1.  This is used for the boot up process.  During the first 8 cycles
131:   the CPU will request 4 word starting at address 0, and this flag maps those requests to FLASH.
132:   if MAP_FLASH_TO_ZERO==0, the FLASH is at address 0, else the SRAM is at address 0.
133:*/
134:NODE MAP_FLASH_TO_ZERO;
135:MAP_FLASH_TO_ZERO.d = 'b'1;
136:MAP_FLASH_TO_ZERO.ar = !SYS_RESET;
137:MAP_FLASH_TO_ZERO.ck = CPU0_A23 & !CPU0_AS;
138:
139:FIELD cpu_address_bus = [CPU0_A23..8];  /* upper 16 bit of address bus */
140:
141:/* 
142:   These flipflops are clocked on the rising edge of the /AS signal when the correct 
143:   address is present.  These hold the config info for how flash and ram are mapped.
144:   bit 1,0:  00 -> Read from FLASH, A18=0
145:             01 -> Read from FLASH, A18=1
146:             1x -> Read from SRAM
147:   bit 3,2:  00 -> Write to SRAM
148:             10 -> Write to FLASH, A18=0
149:             11 -> Write to FLASH, A18=1
150:*/
151:
152:FLASH_CONFIG_CLOCK = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF87XX & !CPU0_UDS & !CPU0_RW);
153:NODE [FLASH_CONFIG_STATE3..0];
154:[FLASH_CONFIG_STATE3..0].ar = !SYS_RESET;
155:[FLASH_CONFIG_STATE3..0].ck = FLASH_CONFIG_CLOCK;
156:FLASH_CONFIG_STATE3.d = CPU0_D3;  /* Pin 11 - CPU0_D11 */
157:FLASH_CONFIG_STATE2.d = CPU0_D2;  /* Pin 10 - CPU0_D10 */
158:FLASH_CONFIG_STATE1.d = CPU0_D1;  /* Pin 9 - CPU0_D9 */
159:FLASH_CONFIG_STATE0.d = CPU0_D0;  /* Pin 8 - CPU0_D8 */
160:
161:/*  SRAM_IN_FLASH_AREA is high if we are doing a read or write and SRAM should respond in the flash area */ 

LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 4

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

162:SRAM_IN_FLASH_AREA = (CPU0_RW & FLASH_CONFIG_STATE1) # ( !CPU0_RW & !FLASH_CONFIG_STATE3 );
163:FLASH_A18 = (CPU0_RW & FLASH_CONFIG_STATE0) # ( !CPU0_RW & FLASH_CONFIG_STATE2 );
164:
165:/* 
166:   Enable SRAM if we are accessing the lower 512k, or the FLASH area and SRAM_IN_FLASH_AREA==1.
167:   MAP_FLASH_TO_ZERO starts out at 0 on reset, so SRAM access will be disable.  Once a single access
168:   occurs to something with A23=1 (a jump into the flash area), MAP_FLASH_TO_ZERO is set to 1 which will
169:   enable SRAM access at low memory.
170:*/
171:/*  Disable this section so we can test using DRAM in the lower SRAM space 
172:SRAM0_LOW_CS = !(
173:                  (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU_LDS & MAP_FLASH_TO_ZERO)
174:                # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU_LDS & SRAM_IN_FLASH_AREA)
175:                );
176:
177:SRAM0_HIGH_CS = !(
178:                  (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU_UDS & MAP_FLASH_TO_ZERO)
179:                  # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU_UDS & SRAM_IN_FLASH_AREA)
180:                );
181:*/
182:
183:/*
184:SRAM0_LOW_CS = !(
185:                  (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU_LDS & SRAM_IN_FLASH_AREA)
186:                );
187:
188:SRAM0_HIGH_CS = !(
189:                  (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU_UDS & SRAM_IN_FLASH_AREA)
190:                );
191:
192:
193:*/
194:
195:SRAM0_LOW_CS = !(
196:                  (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU0_LDS & MAP_FLASH_TO_ZERO)
197:                # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU0_LDS & SRAM_IN_FLASH_AREA)
198:                );
199:
200:SRAM0_HIGH_CS = !(
201:                  (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU0_UDS & MAP_FLASH_TO_ZERO)
202:                  # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU0_UDS & SRAM_IN_FLASH_AREA)
203:                );
204:
205:/*
206:   Flash range is 0xF00000 - 0xF7FFFF 
207:   IF SRAM_IN_FLASH_AREA==0 we should enable the FLASH memory.  Note FLASH_A18
208:   is set from the FLASH_CONFIG_STATE, so it should already be set.
209:   IF SRAM_IN_FLASH_AREA==1, DRAM is mapped into this area.
210:   MAP_FLASH_TO_ZERO is set to 0 at reset, which will enable the FLASH at 0x00000 for the reset vector fetch.
211:   
212:*/
213:FLASH_LOW_CS  = !(    (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU0_LDS & !SRAM_IN_FLASH_AREA)
214:                    # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU0_LDS & !MAP_FLASH_TO_ZERO) );
215:FLASH_HIGH_CS = !(    (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU0_UDS & !SRAM_IN_FLASH_AREA)

LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 5

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

216:                    # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU0_UDS & !MAP_FLASH_TO_ZERO) );
217:
218:/* Start DRAM at address 0 (unless flash is mapped in for bootup) and fill in all the way to 0xBFFFFF 
219:
220:XXXXXXX00000XXXXXXXXXXXXXXXXXXX = 0x000000-0x07FFFF 512K DRAM or FLASH (MAP_FLASH_TO_ZERO)
221:XXXXXXX00001XXXXXXXXXXXXXXXXXXX = 0x080000-0x0FFFFF 512K DRAM
222:                                = 0x100000-0xBFFFFF 11MB DRAM
223:XXXXXXX11110XXXXXXXXXXXXXXXXXXX = 0xF00000=0xF7FFFF 512K DRAM or FLASH (SRAM_IN_FLASH_AREA)
224:XXXXXXX1111100XXXXXXXXXXXXXXXXX = 0xF80000-0xF9FFFF 128K DRAM or FLASH (SRAM_IN_FLASH_AREA)
225:
226:REMOVED these lines to re-enable SRAM:
227:
228:# (cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & MAP_FLASH_TO_ZERO)
229:                        # (cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & SRAM_IN_FLASH_AREA)
230:                        # (cpu_address_bus:'b'XXXXXXX1111100XXXXXXXXXXXXXXXXX & SRAM_IN_FLASH_AREA)
231:
232:*/
233:DRAM_CS = !(ISMEMORYACCESS & (cpu_address_bus:'h'XX1XXXXX
234:                        # cpu_address_bus:'b'XXXXXXX00001XXXXXXXXXXXXXXXXXXX                        
235:                        # cpu_address_bus:'h'XX2XXXXX
236:                        # cpu_address_bus:'h'XX3XXXXX
237:                        # cpu_address_bus:'h'XX4XXXXX
238:                        # cpu_address_bus:'h'XX5XXXXX
239:                        # cpu_address_bus:'h'XX6XXXXX
240:                        # cpu_address_bus:'h'XX7XXXXX
241:                        # cpu_address_bus:'h'XX8XXXXX
242:                        # cpu_address_bus:'h'XX9XXXXX
243:                        # cpu_address_bus:'h'XXAXXXXX
244:                        # cpu_address_bus:'h'XXBXXXXX
245:                        ));
246:
247:/* Memory OE is low for a read operation, so invert of RW line from CPU */
248:MEM_OE = !CPU0_RW # CPU0_AS;
249:
250:SEVENSEG_LATCH_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF00XX );
251:UART_CSA = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF01XX ) # CPU0_UDS;
252:UART_CSB = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF02XX ) # CPU0_UDS;
253:IDE_CSA = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF03XX );
254:IDE_CSB = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF04XX );
255:LED_LATCH_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF05XX );
256:RTS_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF85XX );
257:PTC_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF8AXX );
258:NIC_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF9XXX );
259:K8042_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF84XX );
260:EXP_CS_D = !(ISMEMORYACCESS & cpu_address_bus:'h'XXEXXXXX );
261:EXP_CS_C = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF82XX );
262:
263:/*SLOT_ID_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF06XX );*/
264:
265:ITC_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF07XX );
266:IDE_BUFFER_EN = IDE_CSA & IDE_CSB;
267:
268:/* 
269:      IDE_WR signal goes directly to the /WR pin on the IDE interface.   This signal is asserted (low) as soon as

LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 6

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

270:      the CPU_RW signal goes low, which normally happens write at the start of an /AS cycle.  The IDE_WR_DELAY1 and DELAY2 
271:      flip flops are configured such that they both start at 0 when an AS cycle starts.  After 2 CLK_16M cycles the 
272:      DELAY2 signal is set to 1, which directly unasserts the IDE /WR pin.  The allows the /WR pin to have an active rising
273:      edge BEFORE the end of the CPU cpu cycle.  This is critical to allow the IDE interface to latch data, since at the end
274:      of the cycle the output buffers to the IDE inteface are turned off.  This was a fix from the original design which 
275:      assumed the rising edge of the write signal would be sufficienctly ahead of the buffers getting turned off. 
276:*/
277:
278:IDE_WR = CPU0_RW # IDE_WR_DELAY2;
279:IDE_WR_DELAY1.d = 'b'1;
280:IDE_WR_DELAY1.ck = CLK_16M;
281:IDE_WR_DELAY1.ar = CPU0_AS # !SYS_RESET;
282:
283:IDE_WR_DELAY2.d = IDE_WR_DELAY1;
284:IDE_WR_DELAY2.ck = CLK_16M;
285:IDE_WR_DELAY2.ar = CPU0_AS # !SYS_RESET;
286:
287:
288:
289:/*
290:We are going to free up these two pins to allow the slots on the expansion connector to be used. 
291:NIC_CS = !(ISMEMORYACCESS & CPU0_address_bus:'h'XXFF88XX );
292:K8042_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF84XX );
293:*/
294:
295:/*
296:   RTS_AS_SEL is used to change the address/data select lines going to the DS Real Time Clock IC.
297:   It is also used to drive the DS line on the RTC.  The flip flop is reset while RTS_CS is off 
298:   (which is tied to /AS), and then increments to 1 on the next falling edge.  It will stay at 1
299:   until the end of the bus cycle.
300:*/
301:
302:RTS_A_SEL.d = 'b'1;
303:RTS_A_SEL.ck = !CLK_16M;
304:RTS_A_SEL.ar = RTS_CS;    /* RTS_CS is active low, so it will be high while RTS is not being accesses */
305:RTS_D_SEL = !RTS_A_SEL;   /* Since RTA_A_SEL is held at zero when no access, this will be held at one which is off */
306:
307:/*
308:
309:Total dedicated input used:     4/4     (100%)
310:Total I/O pins used             59/64   (92%)
311:Total Logic cells used          40/128  (31%)
312:Total Flip-Flop used            8/128   (6%)
313:Total Foldback logic used       1/128   (0%)
314:Total Nodes+FB/MCells           41/128  (32%)
315:Total cascade used              0
316:Total input pins                38
317:Total output pins               25
318:Total Pts                       125
319:
320:*/
321:
322:/*
323:Final global control pins assignment (if applicable)...

LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 7

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

324:-------------------------------------------------------
325:CLK_16M assigned to pin  83
326:
327:
328:
329:Performing input pin pre-assignments ...
330:------------------------------------
331:CPU0_AS assigned to pin  2
332:CLK_16M assigned to pin  83
333:CPU0_RW assigned to pin  1
334:SYS_RESET assigned to pin  84
335:
336:Attempt to place floating signals ...
337:------------------------------------
338:K8042_CS is placed at pin 12 (MC 3)
339:CPU0_D3 is placed at pin 11 (MC 5)
340:CPU0_D2 is placed at pin 10 (MC 6)
341:CPU0_D1 is placed at pin 9 (MC 8)
342:CPU0_D0 is placed at pin 8 (MC 11)
343:FLASH_CONFIG_STATE0 is placed at feedback node 611 (MC 11)
344:MAP_FLASH_TO_ZERO is placed at feedback node 612 (MC 12)
345:CPU0_UDS is placed at pin 5 (MC 14)
346:Com_Ctrl_108 is placed at feedback node 614 (MC 14)
347:IDE_WR_DELAY2 is placed at feedback node 615 (MC 15)
348:CPU0_LDS is placed at pin 4 (MC 16)
349:IDE_WR_DELAY1 is placed at feedback node 616 (MC 16)
350:Com_Ctrl_109 is placed at foldback expander node 316 (MC 16)
351:CPU0_A19 is placed at pin 22 (MC 17)
352:CPU0_A20 is placed at pin 21 (MC 19)
353:CPU0_A21 is placed at pin 20 (MC 21)
354:CPU0_A22 is placed at pin 18 (MC 24)
355:CPU0_A23 is placed at pin 17 (MC 25)
356:MEM_OE is placed at pin 15 (MC 29)
357:XXL_110 is placed at feedback node 631 (MC 31)
358:TDI is placed at pin 14 (MC 32)
359:XXL_116 is placed at feedback node 632 (MC 32)
360:CPU0_A12 is placed at pin 31 (MC 35)
361:CPU0_A13 is placed at pin 30 (MC 37)
362:CPU0_A14 is placed at pin 29 (MC 38)
363:CPU0_A15 is placed at pin 28 (MC 40)
364:CPU0_A16 is placed at pin 27 (MC 43)
365:CPU0_A17 is placed at pin 25 (MC 45)
366:CPU0_A18 is placed at pin 24 (MC 46)
367:TMS is placed at pin 23 (MC 48)
368:XXL_115 is placed at feedback node 648 (MC 48)
369:DTACK_FROM_INT is placed at pin 41 (MC 49)
370:CPU0_FC0 is placed at pin 40 (MC 51)
371:CPU0_FC1 is placed at pin 39 (MC 53)
372:CPU0_FC2 is placed at pin 37 (MC 56)
373:CPU0_A8 is placed at pin 36 (MC 57)
374:CPU0_A9 is placed at pin 35 (MC 59)
375:CPU0_A10 is placed at pin 34 (MC 61)
376:XXL_114 is placed at feedback node 661 (MC 61)
377:XXL_113 is placed at feedback node 662 (MC 62)

LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 8

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

378:XXL_112 is placed at feedback node 663 (MC 63)
379:CPU0_A11 is placed at pin 33 (MC 64)
380:XXL_111 is placed at feedback node 664 (MC 64)
381:EXP_DTACK_C is placed at pin 44 (MC 65)
382:CPU0_DTACK is placed at pin 45 (MC 67)
383:EXP_CS_C is placed at pin 46 (MC 69)
384:EXP_CS_D is placed at pin 48 (MC 72)
385:EXP_CS_A is placed at pin 49 (MC 73)
386:EXP_CS_B is placed at pin 50 (MC 75)
387:EXP_DTACK_A is placed at pin 51 (MC 77)
388:IDE_BUFFER_EN is placed at pin 52 (MC 80)
389:EXP_DTACK_B is placed at pin 54 (MC 83)
390:PTC_CS is placed at pin 55 (MC 85)
391:RTS_A_SEL is placed at pin 56 (MC 86)
392:RTS_CS is placed at pin 57 (MC 88)
393:RTS_D_SEL is placed at pin 58 (MC 91)
394:SEVENSEG_LATCH_CS is placed at pin 60 (MC 93)
395:UART_CSB is placed at pin 61 (MC 94)
396:FLASH_CONFIG_STATE2 is placed at feedback node 695 (MC 95)
397:TCK is placed at pin 62 (MC 96)
398:FLASH_CONFIG_STATE1 is placed at feedback node 696 (MC 96)
399:UART_CSA is placed at pin 63 (MC 97)
400:IDE_CSB is placed at pin 64 (MC 99)
401:IDE_CSA is placed at pin 65 (MC 101)
402:EXP_DTACK_D is placed at pin 67 (MC 104)
403:ITC_CS is placed at pin 68 (MC 105)
404:DRAM_CS is placed at pin 70 (MC 109)
405:TDO is placed at pin 71 (MC 112)
406:FLASH_CONFIG_STATE3 is placed at feedback node 712 (MC 112)
407:NIC_CS is placed at pin 73 (MC 115)
408:FLASH_A18 is placed at pin 74 (MC 117)
409:FLASH_HIGH_CS is placed at pin 75 (MC 118)
410:FLASH_LOW_CS is placed at pin 76 (MC 120)
411:IDE_WR is placed at pin 77 (MC 123)
412:LED_LATCH_CS is placed at pin 80 (MC 126)
413:
414:                                                                                    
415:                                                   L       F                        
416:                                                   E       L                        
417:                                                   D       A                        
418:                                           S       _       S                        
419:                                  C C      Y       L       H                        
420:                     C C  C C     P P   C CS C     A       _                        
421:                     P P  P P     U U   P P_ L     T     I L                        
422:                     U U  U U     0 0   U UR K     C     D O                        
423:                     0 0  0 0     _ _   0 0E _     H     E W                        
424:                     _ _  _ _ G   U L V _ _S 1 G   _   V _ _                        
425:                     D D  D D N   D D C A RE 6 N   C   C W C                        
426:                     3 2  1 0 D   S S C S WT M D   S   C R S                        
427:                    -------------------------------------------                     
428:                   / 11   9   7   5   3   1  83  81  79  77  75 \                  
429:                  /    10   8   6   4   2  84  82  80  78  76    \                 
430:        K8042_CS | 12                    (*)                   74 | FLASH_A18       
431:             VCC | 13                                          73 | NIC_CS          

LISTING FOR LOGIC DESCRIPTION FILE: CPU0_CPLDA.pld                   Page 9

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 17:26:29 2023

432:             TDI | 14                                          72 | GND             
433:          MEM_OE | 15                                          71 | TDO             
434:                 | 16                                          70 | DRAM_CS         
435:        CPU0_A23 | 17                                          69 |                 
436:        CPU0_A22 | 18                                          68 | ITC_CS          
437:             GND | 19                                          67 | EXP_DTACK_D     
438:        CPU0_A21 | 20                                          66 | VCC             
439:        CPU0_A20 | 21                                          65 | IDE_CSA         
440:        CPU0_A19 | 22                 ATF1508                  64 | IDE_CSB         
441:             TMS | 23               84-Lead PLCC               63 | UART_CSA        
442:        CPU0_A18 | 24                                          62 | TCK             
443:        CPU0_A17 | 25                                          61 | UART_CSB        
444:             VCC | 26                                          60 | SEVENSEG_LATCH_CS
445:        CPU0_A16 | 27                                          59 | GND             
446:        CPU0_A15 | 28                                          58 | RTS_D_SEL       
447:        CPU0_A14 | 29                                          57 | RTS_CS          
448:        CPU0_A13 | 30                                          56 | RTS_A_SEL       
449:        CPU0_A12 | 31                                          55 | PTC_CS          
450:             GND | 32                                          54 | EXP_DTACK_B     
451:                  \     34  36  38  40  42  44  46  48  50  52   /                 
452:                   \  33  35  37  39  41  43  45  47  49  51  53/                  
453:                    --------------------------------------------                     
454:                      C C C C C V C C D G V E C E G E E E E I V                     
455:                      P P P P P C P P T N C X P X N X X X X D C                     
456:                      U U U U U C U U A D C P U P D P P P P E C                     
457:                      0 0 0 0 0   0 0 C     _ 0 _   _ _ _ _ _                       
458:                      _ _ _ _ _   _ _ K     D _ C   C C C D B                       
459:                      A A A A F   F F _     T D S   S S S T U                       
460:                      1 1 9 8 C   C C F     A T _   _ _ _ A F                       
461:                      1 0     2   1 0 R     C A C   D A B C F                       
462:                                      O     K C           K E                       
463:                                      M     _ K           _ R                       
464:                                      _     C             A _                       
465:                                      I                     E                       
466:                                      N                     N                       
467:
468:
469:
470:*/
471:
472:




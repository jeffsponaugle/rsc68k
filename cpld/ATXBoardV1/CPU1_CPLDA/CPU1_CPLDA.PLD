Name	 CPU1_CPLDA;
PartNo   CPU1_CPLDA;
Date     05/10/2023;
Revision 01;
Designer Sponaugle;
Company  Ratiometric;
Assembly None;
Location None;
Device   f1508ispplcc84;


/* 
   Version 1 for ATX PCB V1.0
   FOR CPU1
*/


PROPERTY ATMEL {TDI_PULLUP = ON};
PROPERTY ATMEL {TMS_PULLUP = ON};

/** Inputs **/

Pin[83]  = CLK_16M;      /* INPUT ONLY PIN 83 */ 
Pin[84]  = SYS_RESET;    /* INPUT ONLY PIN 84 */ 
Pin[2]   = CPU1_AS;       /* INPUT ONLY PIN 2 */ 
Pin[5]   = CPU1_UDS;
Pin[4]   = CPU1_LDS;
Pin[1]   = CPU1_RW;       /* INPUT ONLY PIN 1 = read, 0 = write */ 
Pin[17,18,20,21,22,24,25,27,28,29,30,31,33,34,35,36]  = [CPU1_A23..8];    /* 16 */
Pin[45,46,48]  = [CPU1_FC2..0];    /* 3 */
Pin[16,15,12,11,10,9,8,6]  = [CPU1_D7..0];     /*  */
Pin[37,39,40]   = [CPU1_INTACK2..0];       /* Connect to A1, A2, and A3 - For interrupt ack */
Pin[60,61,63,64] = CPU1_IRQL7,CPU1_IRQL6,CPU1_IRQL5,CPU1_IRQL4;
Pin[80]     = DRAM_DTACK;             /* DTACK feedback from DRAM controller */

/** Outputs **/

Pin[56]  = MEM_OE;                  /* Invert CPU1_RW */
Pin[54]  = CPU1_DTACK;
Pin[41]  = DRAM_CS;
Pin[52]  = CPU1_VPA; 
Pin[49,50,51]  = [CPU1_IPL2..0];

CPU1_A1 = CPU1_INTACK0;
CPU1_A2 = CPU1_INTACK1;
CPU1_A3 = CPU1_INTACK2;


/** Connection to CPU 0 CPLD:

   These pins connect to the CPU0_CPLD.  Also 2 pins from the CPU0_CPLD connect to CPU1_IRQL1 and CPU_IRQL7.

 **/

Pin[57] = CPU0_INT_REQ1;          // Output, to CPU0_CPLD to request interrupt on CPU0
Pin[58] = CPU0_INT_REQ2;          // Output, to CPU0_CPLD to request interrupt on CPU0
Pin[69] = CPU0_BARR1;             // Output, to CPU0_CPLD to send flag to CPU0
Pin[70] = CPU0_BARR2;             // Output, to CPU0_CPLD to send flag to CPU0
Pin[73]=  CPU0_C1HALTREQ;         // Output, to CPU0_CPLD to request for CPU1 to be HALTed.
Pin[74] = F_CPU0_BARR1;           // Input, from CPU0_CPLD
Pin[65]=  F_CPU0_BARR2;           // Input, from CPU0_CPLD
Pin[67] = F_CPU0_INT1;            // Input, from CPU0_CPLD, to interrupt on CPU1 level 1
Pin[68] = F_CPU0_INT2;            // Input, from CPU0_CPLD, to interrupt on CPU1 level 2

Pin[44] = UNUSED1_IO;
Pin[55] = UNUSED2_IO;
Pin[75] = UNUSED3_IO;
Pin[76] = UNUSED4_IO;
Pin[77] = UNUSED5_IO;
Pin[79] = UNUSED6_IO;
Pin[81] = UNUSED7_IO;

/* ISMEMORYACCESS is high if the FC bits indicate this is a memory access operation
    and /AS is low.   FC is allowed to be any state except 111.
*/

ISMEMORYACCESS = !(CPU1_FC2 & CPU1_FC1 & CPU1_FC0) & !CPU1_AS;

/*

 WRITE to FF0704 Upper 8 bits:
                  bit 7 - NA        (defaults to 0)
                  bit 6 - NA        (defaults to 0)
                  bit 5 - TO CPU_0 Barrier Flag 2 (defaults to 0)  FROM CPU_1 to CPU_0
                  bit 4 - TO CPU_0 Barrier Flag 1 (defaults to 0)  FROM CPU_1 to CPU_0
                  bit 3 - TO CPU_0 Interrupt 2  (defaults to 0, 1 triggers interrupt)
                  bit 2 - TO CPU_0 Interrupt 1  (defaults to 0, 1 triggers interrupt)
                  bit 1 - NA
                  bit 0 - TO CPU_0 Request CPU1 be HALTed (0=no ask, 1 edge is ask)

 READ from FF0704 Upper 8 bits:  (This will read as all 00001 for the CPU1)
                  bit 7 - READ AS 1
                  bit 6 - READ AS 1
                  bit 5 - FROM CPU_0 Barrier Flag 2
                  bit 4 - FROM CPU_0 Barrier Flag 1
                  bit 3 - CPU_ID bit 3
                  bit 2 - CPU_ID bit 2
                  bit 1 - CPU_ID bit 1 
                  bit 0 - CPU_ID bit 0 (will read as 1)

                  These decodes could inlude CPU_LDS, since the upper bits are what is connected to the CPLD


*/

REG_WRITE_ITC2 =  INTERNAL_REGISTER_CS # CPU1_A1 # !CPU1_A2 # CPU1_A3 # CPU1_RW;   /* WRITE Address 0xff0704 */
REG_READ_ITC2  =  INTERNAL_REGISTER_CS # CPU1_A1 # !CPU1_A2 # CPU1_A3 # !CPU1_RW;  /* READ  Address 0xff0704 */

/* Internal Register (WRITE 0xFF0704) for flags that go back to CPU0 */


CPU0_C1HALTREQ.d = CPU1_D0.io;
CPU0_C1HALTREQ.ck = REG_WRITE_ITC2;
CPU0_C1HALTREQ.ar = !SYS_RESET;

CPU0_BARR1.d = CPU1_D4.io;
CPU0_BARR1.ck = REG_WRITE_ITC2;
CPU0_BARR1.ar = !SYS_RESET;

CPU0_BARR2.d = CPU1_D5.io;
CPU0_BARR2.ck = REG_WRITE_ITC2;
CPU0_BARR2.ar = !SYS_RESET;

CPU0_INT_REQ1.d = CPU1_D2.io;
CPU0_INT_REQ1.ck = REG_WRITE_ITC2;
CPU0_INT_REQ1.ar = !SYS_RESET;

CPU0_INT_REQ2.d = CPU1_D3.io;
CPU0_INT_REQ2.ck = REG_WRITE_ITC2;
CPU0_INT_REQ2.ar = !SYS_RESET;



/* Writes out of the CPU data lines if the CPU does a READ of 0xFF0704 */

CPU1_D7.d = 'd'0;   /* All 8 bits will be read at '0' during the REG_READ_ITC2 action, which indicates CPU0 */
CPU1_D6.d = 'd'0;
CPU1_D5.d = F_CPU0_BARR2;
CPU1_D4.d = F_CPU0_BARR1;
CPU1_D3.d = 'd'0;
CPU1_D2.d = 'd'0;
CPU1_D1.d = 'd'0;
CPU1_D0.d = 'd'1;

[CPU1_D7..0].ck = (!REG_READ_ITC2);
[CPU1_D7..0].ar = !SYS_RESET;
[CPU1_D7..0].oe = (!REG_READ_ITC2);      /* Turn on the databus outputs for INTACK or a REG_READ of ITC2 */

/* 
  
  For DTACK, if we are doing DRAM access pass thru the DRAM_DTACK pin which comes from the arbitrator 
  if we are doing access to the ITC2 Register, do a 0W is the CS for that is selected.

  When DTACK=0, the cpu will continue the cycle.  If ==1 it will add waitstates.

*/

CPU1_DTACK = CPU1_AS # ((DRAM_CS # DRAM_DTACK) & (INTERNAL_REGISTER_CS));

FIELD cpu_address_bus = [CPU1_A23..8];  /* upper 16 bit of address bus */

/* DRAM for CPU1 is mapped starting 0 all the way to 0xEFFFFF, plus 0xF00000-0xF7FFFF */

DRAM_CS = !(ISMEMORYACCESS & (cpu_address_bus:'h'XX0XXXXX
                        # cpu_address_bus:'h'XX1XXXXX                       
                        # cpu_address_bus:'h'XX2XXXXX
                        # cpu_address_bus:'h'XX3XXXXX
                        # cpu_address_bus:'h'XX4XXXXX
                        # cpu_address_bus:'h'XX5XXXXX
                        # cpu_address_bus:'h'XX6XXXXX
                        # cpu_address_bus:'h'XX7XXXXX
                        # cpu_address_bus:'h'XX8XXXXX
                        # cpu_address_bus:'h'XX9XXXXX
                        # cpu_address_bus:'h'XXAXXXXX
                        # cpu_address_bus:'h'XXBXXXXX
                        # cpu_address_bus:'h'XXCXXXXX
                        # cpu_address_bus:'h'XXDXXXXX
                        # cpu_address_bus:'h'XXEXXXXX
                        # (cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX)
                        ));

INTERNAL_REGISTER_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF07XX );

/* Memory OE is low for a read operation, so invert of RW line from CPU */
MEM_OE = !CPU1_RW # CPU1_AS;

/* INT_ACK is high during an interrupt acknowledgement */

INT_ACK = CPU1_FC2 & CPU1_FC1 & CPU1_FC0 & !CPU1_AS;
CPU1_VPA = !INT_ACK;

/*
   For the two incoming signals from CPU0 to interrupt CPU1, we edge trigger latch
   on the rising edge to record the request.   This flip flop must be reset during the
   interrupt ack cycle if the ack is for this level.
   These latches are active low signals. 
   The other interrupt inputs (7,6,5,4) are not edge trigger latched yet.  
*/

NODE F_CPU0_INT1_LATCHED, F_CPU0_INT2_LATCHED;

F_CPU0_INT1_LATCHED.d = 'd'0;
F_CPU0_INT1_LATCHED.ck = F_CPU0_INT1;
F_CPU0_INT1_LATCHED.ap = !SYS_RESET # IRQL1_ACK;

F_CPU0_INT2_LATCHED.d = 'd'0;
F_CPU0_INT2_LATCHED.ck = F_CPU0_INT2;
F_CPU0_INT2_LATCHED.ap = !SYS_RESET # IRQL2_ACK;

IRQL2_ACK = !CPU1_INTACK2 & CPU1_INTACK1 & !CPU1_INTACK0 & INT_ACK;
IRQL1_ACK = !CPU1_INTACK2 & !CPU1_INTACK1 & CPU1_INTACK0 & INT_ACK;

/* active low priorty encoder for interrupts */

IRQL7_INT = CPU1_IRQL7;
IRQL6_INT = (CPU1_IRQL6) # !CPU1_IRQL7;
IRQL5_INT = (CPU1_IRQL5) # !CPU1_IRQL6 # !CPU1_IRQL7;
IRQL4_INT = (CPU1_IRQL4) # !CPU1_IRQL5 # !CPU1_IRQL6 # !CPU1_IRQL7;
//IRQL3_INT = (IRQL3A_PE & IRQL3B_PE) # !IRQL4_INT # !IRQL5_INT # !IRQL6_INT # !IRQL7_INT;
IRQL2_INT = (F_CPU0_INT2_LATCHED) # !CPU1_IRQL4 # !CPU1_IRQL5 # !CPU1_IRQL6 # !CPU1_IRQL7;
IRQL1_INT = (F_CPU0_INT1_LATCHED) # !F_CPU0_INT2_LATCHED # !CPU1_IRQL4 # !CPU1_IRQL5 # !CPU1_IRQL6 # !CPU1_IRQL7;

/* 
   CPU0_IPL Drive using 8:3 priority encoder but only for 6 sources.   This output is driven from the above grouped signals.  
   This picks the highest priority interrupt level and encodes that to the CPU.  The CPU will respond
   to any value other than 111 by doing an interrupt ack cycle.

   NOTE - IPL signals are active low, so 000 = int 7, and 111 = no interrupt.
   The corresponding int ack cycle drives the lowest three address lines (A3-A1) to 
   indicate WHICH interrupt is being acknowledged, BUT those bits are active high.

   So an IPL of 111 tells the CPU to do interrupt 7, and the cpu responds in the ack cycle 
   by putting 000 on the address bits.  

*/   

CPU1_IPL0 = !(!IRQL1_INT #  !IRQL5_INT # !IRQL7_INT);
CPU1_IPL1 = !(!IRQL6_INT # !IRQL7_INT # !IRQL2_INT);
CPU1_IPL2 = !(!IRQL4_INT # !IRQL5_INT # !IRQL6_INT # !IRQL7_INT);

/*

Total dedicated input used:	3/4 	(75%)
Total I/O pins used		55/64 	(85%)
Total Logic cells used 		27/128 	(21%)
Total Flip-Flop used 		15/128 	(11%)
Total Foldback logic used 	0/128 	(0%)
Total Nodes+FB/MCells 		27/128 	(21%)
Total cascade used 		0
Total input pins 		38
Total output pins 		20
Total Pts 			74

Final global control pins assignment (if applicable)...
-------------------------------------------------------
F_CPU0_INT1 assigned to pin  81
F_CPU0_INT2 assigned to pin  83



Final global control pins assignment (if applicable)...
-------------------------------------------------------



Performing input pin pre-assignments ...
------------------------------------
CPU1_AS assigned to pin  2
CPU1_RW assigned to pin  1
SYS_RESET assigned to pin  84
F_CPU0_INT2_LATCHED.AP equation needs patching.
F_CPU0_INT1_LATCHED.AP equation needs patching.
2 control equtions need patching

Attempt to place floating signals ...
------------------------------------
CPU1_D5 is placed at pin 12 (MC 3)
CPU1_D4 is placed at pin 11 (MC 5)
CPU1_D3 is placed at pin 10 (MC 6)
CPU1_D2 is placed at pin 9 (MC 8)
F_CPU0_INT2_LATCHED.AP is placed at feedback node 609 (MC 9)
F_CPU0_INT1_LATCHED.AP is placed at feedback node 610 (MC 10)
CPU1_D1 is placed at pin 8 (MC 11)
F_CPU0_INT2_LATCHED is placed at feedback node 612 (MC 12)
CPU1_D0 is placed at pin 6 (MC 13)
F_CPU0_INT1_LATCHED is placed at feedback node 615 (MC 15)
CPU1_A19 is placed at pin 22 (MC 17)
CPU1_A20 is placed at pin 21 (MC 19)
CPU1_A21 is placed at pin 20 (MC 21)
CPU1_A22 is placed at pin 18 (MC 24)
CPU1_A23 is placed at pin 17 (MC 25)
CPU1_D7 is placed at pin 16 (MC 27)
CPU1_D6 is placed at pin 15 (MC 29)
TDI is placed at pin 14 (MC 32)
CPU1_A12 is placed at pin 31 (MC 35)
CPU1_A13 is placed at pin 30 (MC 37)
CPU1_A14 is placed at pin 29 (MC 38)
CPU1_A15 is placed at pin 28 (MC 40)
CPU1_A16 is placed at pin 27 (MC 43)
CPU1_A17 is placed at pin 25 (MC 45)
CPU1_A18 is placed at pin 24 (MC 46)
Com_Ctrl_128 is placed at feedback node 646 (MC 46)
Com_Ctrl_127 is placed at feedback node 647 (MC 47)
TMS is placed at pin 23 (MC 48)
Com_Ctrl_126 is placed at feedback node 648 (MC 48)
DRAM_CS is placed at pin 41 (MC 49)
CPU1_INTACK0 is placed at pin 40 (MC 51)
CPU1_INTACK1 is placed at pin 39 (MC 53)
CPU1_INTACK2 is placed at pin 37 (MC 56)
CPU1_A8 is placed at pin 36 (MC 57)
CPU1_A9 is placed at pin 35 (MC 59)
CPU1_A10 is placed at pin 34 (MC 61)
CPU1_A11 is placed at pin 33 (MC 64)
CPU1_FC2 is placed at pin 45 (MC 67)
CPU1_FC1 is placed at pin 46 (MC 69)
CPU1_FC0 is placed at pin 48 (MC 72)
CPU1_IPL2 is placed at pin 49 (MC 73)
CPU1_IPL1 is placed at pin 50 (MC 75)
CPU1_IPL0 is placed at pin 51 (MC 77)
CPU1_VPA is placed at pin 52 (MC 80)
CPU1_DTACK is placed at pin 54 (MC 83)
MEM_OE is placed at pin 56 (MC 86)
CPU0_INT_REQ1 is placed at pin 57 (MC 88)
CPU0_INT_REQ2 is placed at pin 58 (MC 91)
CPU1_IRQL7 is placed at pin 60 (MC 93)
CPU1_IRQL6 is placed at pin 61 (MC 94)
TCK is placed at pin 62 (MC 96)
CPU1_IRQL5 is placed at pin 63 (MC 97)
CPU1_IRQL4 is placed at pin 64 (MC 99)
F_CPU0_BARR2 is placed at pin 65 (MC 101)
F_CPU0_INT1 is placed at pin 67 (MC 104)
F_CPU0_INT2 is placed at pin 68 (MC 105)
CPU0_BARR1 is placed at pin 69 (MC 107)
CPU0_BARR2 is placed at pin 70 (MC 109)
TDO is placed at pin 71 (MC 112)
CPU0_C1HALTREQ is placed at pin 73 (MC 115)
F_CPU0_BARR1 is placed at pin 74 (MC 117)
DRAM_DTACK is placed at pin 80 (MC 126)

                                                                                    
                                                                                    
                                                                                    
                                                   D                                
                                           S       R                                
                                           Y       A                                
                     C C  C C   C       C CS       M                                
                     P P  P P   P       P P_       _                                
                     U U  U U   U       U UR       D                                
                     1 1  1 1   1       1 1E       T                                
                     _ _  _ _ G _     V _ _S   G   A   V                            
                     D D  D D N D     C A RE   N   C   C                            
                     4 3  2 1 D 0     C S WT   D   K   C                            
                    -------------------------------------------                     
                   / 11   9   7   5   3   1  83  81  79  77  75 \                  
                  /    10   8   6   4   2  84  82  80  78  76    \                 
         CPU1_D5 | 12                    (*)                   74 | F_CPU0_BARR1    
             VCC | 13                                          73 | CPU0_C1HALTREQ  
             TDI | 14                                          72 | GND             
         CPU1_D6 | 15                                          71 | TDO             
         CPU1_D7 | 16                                          70 | CPU0_BARR2      
        CPU1_A23 | 17                                          69 | CPU0_BARR1      
        CPU1_A22 | 18                                          68 | F_CPU0_INT2     
             GND | 19                                          67 | F_CPU0_INT1     
        CPU1_A21 | 20                                          66 | VCC             
        CPU1_A20 | 21                                          65 | F_CPU0_BARR2    
        CPU1_A19 | 22                 ATF1508                  64 | CPU1_IRQL4      
             TMS | 23               84-Lead PLCC               63 | CPU1_IRQL5      
        CPU1_A18 | 24                                          62 | TCK             
        CPU1_A17 | 25                                          61 | CPU1_IRQL6      
             VCC | 26                                          60 | CPU1_IRQL7      
        CPU1_A16 | 27                                          59 | GND             
        CPU1_A15 | 28                                          58 | CPU0_INT_REQ2   
        CPU1_A14 | 29                                          57 | CPU0_INT_REQ1   
        CPU1_A13 | 30                                          56 | MEM_OE          
        CPU1_A12 | 31                                          55 |                 
             GND | 32                                          54 | CPU1_DTACK      
                  \     34  36  38  40  42  44  46  48  50  52   /                 
                   \  33  35  37  39  41  43  45  47  49  51  53/                  
              	    --------------------------------------------                     
                      C C C C C V C C D G V   C C G C C C C C V                     
                      P P P P P C P P R N C   P P N P P P P P C                     
                      U U U U U C U U A D C   U U D U U U U U C                     
                      1 1 1 1 1   1 1 M       1 1   1 1 1 1 1                       
                      _ _ _ _ _   _ _ _       _ _   _ _ _ _ _                       
                      A A A A I   I I C       F F   F I I I V                       
                      1 1 9 8 N   N N S       C C   C P P P P                       
                      1 0     T   T T         2 1   0 L L L A                       
                              A   A A                 2 1 0                         
                              C   C C                                               
                              K   K K                                               
                              2   1 0                                               




*/


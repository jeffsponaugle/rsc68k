LISTING FOR LOGIC DESCRIPTION FILE: CPU1_CPLDA.pld                   Page 1

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 21:39:29 2023

  1:Name     CPU1_CPLDA;
  2:PartNo   CPU1_CPLDA;
  3:Date     05/10/2023;
  4:Revision 01;
  5:Designer Sponaugle;
  6:Company  Ratiometric;
  7:Assembly None;
  8:Location None;
  9:Device   f1508ispplcc84;
 10:
 11:
 12:/* 
 13:   Version 1 for ATX PCB V1.0
 14:   FOR CPU1
 15:*/
 16:
 17:PROPERTY ATMEL {open_collector=CPU1_RESET_OUTPUT,CPU1_HALT_OUTPUT};
 18:PROPERTY ATMEL {TDI_PULLUP = ON};
 19:PROPERTY ATMEL {TMS_PULLUP = ON};
 20:
 21:/** Inputs **/
 22:
 23:Pin[83]  = CLK_16M;      /* INPUT ONLY PIN 83 */ 
 24:Pin[84]  = SYS_RESET;    /* INPUT ONLY PIN 84 */ 
 25:Pin[2]   = CPU1_AS;       /* INPUT ONLY PIN 2 */ 
 26:Pin[5]   = CPU1_UDS;
 27:Pin[4]   = CPU1_LDS;
 28:Pin[1]   = CPU1_RW;       /* INPUT ONLY PIN 1 = read, 0 = write */ 
 29:Pin[17,18,20,21,22,24,25,27,28,29,30,31,33,34,35,36]  = [CPU1_A23..8];    /* 16 */
 30:Pin[45,46,48]  = [CPU1_FC2..0];    /* 3 */
 31:Pin[16,15,12,11,10,9,8,6]  = [CPU1_D7..0];     /*  */
 32:Pin[37,39,40]   = [CPU1_INTACK2..0];       /* Connect to A1, A2, and A3 - For interrupt ack */
 33:Pin[60,61,63,64] = CPU1_IRQL7,CPU1_IRQL4,CPU1_IRQL2,CPU1_IRQL1;
 34:
 35:
 36:/** Outputs **/
 37:
 38:Pin  0  = MEM_OE;                  /* Invert CPU1_RW */
 39:Pin  0  = CPU1_DTACK;
 40:Pin  0  = DRAM_CS;
 41:Pin  0  = CPU1_VPA;
 42:Pin  0  = CPU1_RESET_OUT;
 43:Pin  0  = CPU1_HALT_OUT;    
 44:
 45:
 46:/** Connection to CPU 0 CPLD **/
 47:
 48:// These pins go to the INT CPLD for CPU0, and are driven by a register inside that CPLD.

 49:
 50:Pin  0  = CPU0_F1_INT_REQ1;
 51:Pin  0  = CPU0_F1_INT_REQ2;
 52:Pin  0  = CPU0_F1_BARR1;
 53:

LISTING FOR LOGIC DESCRIPTION FILE: CPU1_CPLDA.pld                   Page 2

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 21:39:29 2023

 54:Pin  0  = CPU0_1_RESET_REQ, CPU0_1_HALT_REQ, CPU0_1_BARR1;
 55:CPU1_RESET_OUT = CPU0_1_RESET_REQ;
 56:CPU1_HALT_OUT = CPU0_1_HALT_REQ;
 57:
 58:
 59:CPU1_A1 = CPU1_INTACK0;
 60:CPU1_A2 = CPU1_INTACK1;
 61:
 62:/* ISMEMORYACCESS is high if the FC bits indicate this is a memory access operation
 63:    and /AS is low.   FC is allowed to be any state except 111.
 64:*/
 65:
 66:
 67:ISMEMORYACCESS = !(CPU1_FC2 & CPU1_FC1 & CPU1_FC0) & !CPU1_AS;
 68:
 69:/*
 70:
 71: WRITE to FF0704 Upper 8 bits:
 72:                  bit 7 - NA        ( defaults to 0, 0 holds CPU1 in reset/halt )
 73:                  bit 6 - NA        (defaults to 0, 0 hold CPU1 in reset/halt)
 74:                  bit 5 - TO CPU_0 Interrupt 1  (defaults to 0, 1 triggers interrupt)
 75:                  bit 4 - TO CPU_0 Interrupt 2  (defaults to 0, 1 triggers interrupt)
 76:                  bit 3 - TO CPU_0 Barrier Flag (defaults to 0)  FROM CPU_1 to CPU_0
 77:                  bit 2
 78:                  bit 1
 79:                  bit 0
 80:
 81: READ from FF0704 Upper 8 bits:  (This will read as all 0's for the CPU0)
 82:                  bit 3 - CPU_ID bit 3
 83:                  bit 2 - CPU_ID bit 2
 84:                  bit 1 - CPU_ID bit 1 
 85:                  bit 0 - CPU_ID bit 0
 86:
 87:
 88:*/
 89:
 90:REG_WRITE_ITC2 =  INTERNAL_REGISTER_CS # CPU1_A1 # !CPU1_A2 # CPU1_RW;   /* WRITE Address 0xFF0704 */
 91:REG_READ_ITC2  =  INTERNAL_REGISTER_CS # CPU1_A1 # !CPU1_A2 # !CPU1_RW;  /* READ  Address 0xff0704 */
 92:
 93:/* Internal Registers for flags that go back to CPU0 */
 94:
 95:CPU0_F1_BARR1.d = CPU1_D3.io;
 96:CPU0_F1_BARR1.ck = REG_WRITE_ITC2;
 97:CPU0_F1_BARR1.ar = !SYS_RESET;
 98:
 99:CPU0_F1_INT_REQ2.d = CPU1_D4.io;
100:CPU0_F1_INT_REQ2.ck = REG_WRITE_ITC2;
101:CPU0_F1_INT_REQ2.ar = !SYS_RESET;
102:
103:CPU0_F1_INT_REQ1.d = CPU1_D5.io;
104:CPU0_F1_INT_REQ1.ck = REG_WRITE_ITC2;
105:CPU0_F1_INT_REQ1.ar = !SYS_RESET;
106:
107:

LISTING FOR LOGIC DESCRIPTION FILE: CPU1_CPLDA.pld                   Page 3

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Wed Jun 07 21:39:29 2023

108:/* DTACK driven back to the CPU based on what kind of access is happening. */
109:/* DTACK_MEMORY_0W is high if an access is happening that is 0W */
110:
111:DTACK_MEMORY_0W = !DRAM_CS ;
112:
113:/* 
114:   If we are doing a 0W access, assert DTACK when /AS is asserted.
115:   Merge in DTACK_FROM_INT, which is a DTACK signal from the interrupt controller.  It is used
116:   during an interrupt acknowledgement cycle to indicate the data bus has the interrupt vector
117:   present.  It will only be asserted (0) by the interrupt controller during an interrupt acknowledgement 
118:   cycle.  No protection, so if DTACK_FROM_INT is asserted (0) at any other time it will effect
119:   other active transactions.
120:
121:   EXP_DTACK_IN is an open-collector signal from the VRAM controller to restrict access to video memory during
122:   both horizontal and vertical activity.   If it is asserted and we are doing an access to VRAMM,
123:   it should be passed thru.
124:
125:*/
126:
127:CPU1_DTACK = !(DTACK_MEMORY_0W & !CPU1_AS);
128:
129:FIELD cpu_address_bus = [CPU1_A23..8];  /* upper 16 bit of address bus */
130:
131:/* DRAM for CPU1 is mapped starting 0 all the way to 0xEFFFFF, plus 0xF00000-0xF7FFFF */
132:
133:DRAM_CS = !(ISMEMORYACCESS & (cpu_address_bus:'h'XX0XXXXX
134:                        # cpu_address_bus:'h'XX1XXXXX                       
135:                        # cpu_address_bus:'h'XX2XXXXX
136:                        # cpu_address_bus:'h'XX3XXXXX
137:                        # cpu_address_bus:'h'XX4XXXXX
138:                        # cpu_address_bus:'h'XX5XXXXX
139:                        # cpu_address_bus:'h'XX6XXXXX
140:                        # cpu_address_bus:'h'XX7XXXXX
141:                        # cpu_address_bus:'h'XX8XXXXX
142:                        # cpu_address_bus:'h'XX9XXXXX
143:                        # cpu_address_bus:'h'XXAXXXXX
144:                        # cpu_address_bus:'h'XXBXXXXX
145:                        # cpu_address_bus:'h'XXCXXXXX
146:                        # cpu_address_bus:'h'XXDXXXXX
147:                        # cpu_address_bus:'h'XXEXXXXX
148:                        # (cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX)
149:                        ));
150:
151:INTERNAL_REGISTER_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF07XX );
152:
153:/* Memory OE is low for a read operation, so invert of RW line from CPU */
154:MEM_OE = !CPU1_RW # CPU1_AS;
155:
156:
157:
158:
159:




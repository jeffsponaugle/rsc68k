LISTING FOR LOGIC DESCRIPTION FILE: ADDRDECODE.pld                   Page 1

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Mon May 16 09:48:27 2022

  1:Name     AddressDecoder;
  2:PartNo   ADDRDECODE;
  3:Date     05/10/2025;
  4:Revision 01;
  5:Designer Sponaugle;
  6:Company  Ratiometric;
  7:Assembly None;
  8:Location None;
  9:Device   f1508ispplcc84;
 10:
 11:
 12:/** Inputs **/
 13:
 14:Pin[83]  = CLK_16M;
 15:Pin[84]  = CPU_RESET;
 16:Pin[6]   = CPU_AS;
 17:Pin[5]   = CPU_UDS;
 18:Pin[4]   = CPU_LDS;
 19:Pin[2]   = CPU_RW;       /* 1 = read, 0 = write */
 20:Pin[44]  = CPU_BG;  
 21:Pin[17,18,20,21,22,24,25,27,28,29,30,31,33,34,35,36]  = [CPU_A23..8];    /* 16 */
 22:Pin[37,39,40]  = [CPU_FC2..0];    /* 3 */
 23:Pin[11,10,9,8]  = [CPU_D3..0];     /* 4 */
 24:Pin[41]  = DTACK_FROM_INT;  /* DTACK signal from Interrupt Controller */
 25:
 26:/** Outputs **/
 27:
 28:Pin[15]  = MEM_OE;   
 29:Pin[45]  = CPU_DTACK;
 30:Pin[70]  = DRAM_CS;
 31:Pin[79]  = SRAM0_LOW_CS;
 32:Pin[77]  = SRAM0_HIGH_CS;
 33:Pin[76]  = FLASH_LOW_CS;
 34:Pin[75]  = FLASH_HIGH_CS;
 35:Pin[74]  = FLASH_A18;               /* Used to select lower or upper half of FLASH */
 36:Pin[80]  = LED_LATCH_CS;
 37:Pin[73]  = NIC_CS;
 38:Pin[65]  = IDE_CSA;
 39:Pin[64]  = IDE_CSB;
 40:Pin[63]  = UART_CSA;
 41:Pin[61]  = UART_CSB;
 42:Pin[60]  = SEVENSEG_LATCH_CS;
 43:Pin[58]  = RTS_D_SEL;
 44:Pin[57]  = RTS_CS;
 45:Pin[56]  = RTS_A_SEL;
 46:Pin[55]  = PTC_CS;
 47:Pin[54]  = K8042_CS;
 48:Pin[52]  = IDE_BUFFER_EN;
 49:Pin[68]  = ITC_CS;
 50:
 51:
 52:/* Worker CPU Related signals */
 53:

LISTING FOR LOGIC DESCRIPTION FILE: ADDRDECODE.pld                   Page 2

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Mon May 16 09:48:27 2022

 54:Pin[12]  = SPY_SETUP_LATCH_CS;
 55:Pin[49]  = WORKER_RESET_PRESENCE_LATCH_CS;
 56:Pin[50]  = WORKER_BARRIER_CS;
 57:Pin[69]  = WORKER_BUS_REQUEST;
 58:Pin[67]  = WORKER_BUS_GRANT;
 59:Pin[48]  = SBUS_BUFFER_ACD_EN;
 60:Pin[51]  = SBUS_BUFFER_AC_DIR;
 61:Pin[46]  = SBUS_BUFFER_D_DIR;
 62:
 63:/* Pins for Testing */
 64:
 65:WORKER_BUS_REQUEST = WORKER_BUS_GRANT # CPU_BG;
 66:SBUS_BUFFER_ACD_EN = 'b'1;
 67:SBUS_BUFFER_AC_DIR = 'b'1;
 68:SBUS_BUFFER_D_DIR = 'b'1;
 69:
 70:/** Internal Variables and nodes **/
 71:
 72:/* 
 73:   Create the 16 MHZ clock from the incoming 32MHz clock. It should run even during reset as the processor needs a clock signal
 74:   to come out of reset.   It is held in reset by the incoming reset signal.
 75:*/
 76:
 77:/*
 78:   CPU_RESET is driven from here, and is synchronized with the rising edge of CLK_16M.  
 79:   CPU_RESET_IN is externally connected to a reset button and a reset controller ()
 80:*/
 81:
 82:/* ISMEMORYACCESS is high if the FC bits indicate this is a memory access operation
 83:    and /AS is low
 84:*/
 85:
 86:ISMEMORYACCESS = !(CPU_FC2 & CPU_FC1 & CPU_FC0) & !CPU_AS;
 87:
 88:/* DTACK driven back to the CPU based on what kind of access is happening. */
 89:/* DTACK_MEMORY_0W is high if an access is happening that is 0W */
 90:
 91:DTACK_MEMORY_0W = !SRAM0_HIGH_CS # !SRAM0_LOW_CS # !DRAM_CS # !FLASH_LOW_CS # !FLASH_HIGH_CS
 92:                  # !SEVENSEG_LATCH_CS # !UART_CSA # !UART_CSB # !IDE_CSA # !IDE_CSB
 93:                  # !LED_LATCH_CS # !RTS_CS # !PTC_CS # !NIC_CS # !SPY_SETUP_LATCH_CS 
 94:                  # !WORKER_RESET_PRESENCE_LATCH_CS # !WORKER_BARRIER_CS;
 95:
 96:/* 
 97:   If we are doing a 0W access, assert DTACK when /AS is asserted.
 98:   Merge in DTACK_FROM_INT, which is a DTACK signal from the interrupt controller.  It is used
 99:   during an interrupt acknowledgement cycle to indicate the data bus has the interrupt vector
100:   present.  It will only be asserted (0) by the interrupt controller during an interrupt acknowledgement 
101:   cycle.
102:*/
103:
104:CPU_DTACK = !(DTACK_MEMORY_0W & !CPU_AS) & DTACK_FROM_INT;
105:
106:/*
107:   MAP_FLASH_TO_ZERO starts out set to 0 (from the CPU_RESET), and switches to 1 as soon as a memory

LISTING FOR LOGIC DESCRIPTION FILE: ADDRDECODE.pld                   Page 3

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Mon May 16 09:48:27 2022

108:   access occurs with the highest bit set to 1.  This is used for the boot up process.  During the first 8 cycles
109:   the CPU will request 4 word starting at address 0, and this flag maps those requests to FLASH
110:*/
111:NODE MAP_FLASH_TO_ZERO;
112:MAP_FLASH_TO_ZERO.d = 'b'1;
113:MAP_FLASH_TO_ZERO.ar = !CPU_RESET;
114:MAP_FLASH_TO_ZERO.ck = CPU_A23 & !CPU_AS;
115:
116:FIELD cpu_address_bus = [CPU_A23..8];  /* upper 16 bit of address bus */
117:
118:/* 
119:   These flipflops are clocked on the rising edge of the /AS signal when the correct 
120:   address is present.  These hold the config info for how flash and ram are mapped.
121:   bit 1,0:  00 -> Read from FLASH, A18=0
122:             01 -> Read from FLASH, A18=1
123:             1x -> Read from SRAM
124:   bit 3,2:  00 -> Write to SRAM
125:             10 -> Write to FLASH, A18=0
126:             11 -> Write to FLASH, A18=1
127:*/
128:
129:FLASH_CONFIG_CLOCK = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF87XX & !CPU_UDS & !CPU_RW);
130:NODE [FLASH_CONFIG_STATE3..0];
131:[FLASH_CONFIG_STATE3..0].ar = !CPU_RESET;
132:[FLASH_CONFIG_STATE3..0].ck = FLASH_CONFIG_CLOCK;
133:FLASH_CONFIG_STATE3.d = CPU_D3;
134:FLASH_CONFIG_STATE2.d = CPU_D2;
135:FLASH_CONFIG_STATE1.d = CPU_D1;
136:FLASH_CONFIG_STATE0.d = CPU_D0;
137:
138:/*  SRAM_IN_FLASH_AREA is high if we are doing a read or write and SRAM should respond in the flash area */ 
139:SRAM_IN_FLASH_AREA = (CPU_RW & !FLASH_CONFIG_STATE1) # ( !CPU_RW & FLASH_CONFIG_STATE3 );
140:FLASH_A18 = (CPU_RW & FLASH_CONFIG_STATE0) # ( !CPU_RW & FLASH_CONFIG_STATE2 );
141:
142:
143:
144:/* 
145:   Enable SRAM if we are accessing the lower 512k, or the FLASH area and SRAM_IN_FLASH_AREA==1
146:*/
147:
148:SRAM0_LOW_CS = !(
149:                  (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU_LDS & MAP_FLASH_TO_ZERO)
150:                  # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU_LDS & SRAM_IN_FLASH_AREA)
151:                );
152:
153:SRAM0_HIGH_CS = !(
154:                  (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU_UDS & MAP_FLASH_TO_ZERO)
155:                  # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU_UDS & SRAM_IN_FLASH_AREA)
156:                );
157:
158:
159:DRAM_CS = !(ISMEMORYACCESS & (cpu_address_bus:'h'XX1XXXXX
160:                        # cpu_address_bus:'h'XX2XXXXX
161:                        # cpu_address_bus:'h'XX3XXXXX

LISTING FOR LOGIC DESCRIPTION FILE: ADDRDECODE.pld                   Page 4

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Mon May 16 09:48:27 2022

162:                        # cpu_address_bus:'h'XX4XXXXX
163:                        # cpu_address_bus:'h'XX5XXXXX
164:                        # cpu_address_bus:'h'XX6XXXXX
165:                        # cpu_address_bus:'h'XX7XXXXX
166:                        # cpu_address_bus:'h'XX8XXXXX
167:                        # cpu_address_bus:'h'XX9XXXXX
168:                        # cpu_address_bus:'h'XXAXXXXX
169:                        # cpu_address_bus:'h'XXBXXXXX
170:                        ));
171:/* 
172:   Flash range is 0xF00000 - 0xF7FFFF 
173:   IF SRAM_IN_FLASH_AREA==0 we should enable the FLASH memory.  Note FLASH_A18
174:   is set from the FLASH_CONFIG_STATE, so it should already be set.
175:   MAP_FLASH_TO_ZERO is set to 0 at reset, which will enable the FLASH at 0x00000 for the reset vector fetch.
176:*/
177:FLASH_LOW_CS  = !( (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU_LDS & !SRAM_IN_FLASH_AREA)
178:                    # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU_LDS & !MAP_FLASH_TO_ZERO) );
179:FLASH_HIGH_CS = !( (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX11110XXXXXXXXXXXXXXXXXXX & !CPU_UDS & !SRAM_IN_FLASH_AREA)
180:                    # (ISMEMORYACCESS & cpu_address_bus:'b'XXXXXXX00000XXXXXXXXXXXXXXXXXXX & !CPU_UDS & !MAP_FLASH_TO_ZERO) );
181:
182:/* Memory OE is low for a read operation, so invert of RW line from CPU */
183:MEM_OE = !CPU_RW;
184:
185:SEVENSEG_LATCH_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF00XX );
186:UART_CSA = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF01XX );
187:UART_CSB = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF02XX );
188:IDE_CSA = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF03XX );
189:IDE_CSB = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF04XX );
190:LED_LATCH_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF05XX );
191:RTS_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF85XX );
192:PTC_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF8AXX );
193:NIC_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF88XX );
194:SPY_SETUP_LATCH_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF82XX );
195:WORKER_RESET_PRESENCE_LATCH_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF80XX );
196:WORKER_BARRIER_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF89XX );
197:/*SLOT_ID_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF06XX );*/
198:K8042_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF84XX );
199:ITC_CS = !(ISMEMORYACCESS & cpu_address_bus:'h'XXFF07XX );
200:IDE_BUFFER_EN = IDE_CSA & IDE_CSB;
201:
202:/*
203:   RTS_AS_SEL is used to change the address/data select lines going to the DS Real Time Clock IC.
204:   It is also used to drive the DS line on the RTC.  The flip flop is reset while RTS_CS is off 
205:   (which is tied to /AS), and then increments to 1 on the next falling edge.  It will stay at 1
206:   until the end of the bus cycle.
207:*/
208:
209:RTS_A_SEL.d = 'b'1;
210:RTS_A_SEL.ck = !CLK_16M;
211:RTS_A_SEL.ar = !RTS_CS;
212:
213:RTS_D_SEL = !RTS_A_SEL;
214:
215:/*

LISTING FOR LOGIC DESCRIPTION FILE: ADDRDECODE.pld                   Page 5

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Mon May 16 09:48:27 2022

216:
217:Total dedicated input used:     2/4     (50%)
218:Total I/O pins used             63/64   (98%)
219:Total Logic cells used          40/128  (31%)
220:Total Flip-Flop used            8/128   (6%)
221:Total Foldback logic used       0/128   (0%)
222:Total Nodes+FB/MCells           40/128  (31%)
223:Total cascade used              0
224:Total input pins                35
225:Total output pins               30
226:Total Pts                       115
227:
228:*/
229:
230:/*
231:CPU_RW assigned to pin  2
232:CLK_32M assigned to pin  83
233:
234:Attempt to place floating signals ...
235:------------------------------------
236:SPY_SETUP_LATCH_CS is placed at pin 12 (MC 3)
237:CPU_D3 is placed at pin 11 (MC 5)
238:CPU_D2 is placed at pin 10 (MC 6)
239:CPU_D1 is placed at pin 9 (MC 8)
240:CPU_D0 is placed at pin 8 (MC 11)
241:CPU_AS is placed at pin 6 (MC 13)
242:CPU_UDS is placed at pin 5 (MC 14)
243:CPU_LDS is placed at pin 4 (MC 16)
244:CPU_A19 is placed at pin 22 (MC 17)
245:CPU_A20 is placed at pin 21 (MC 19)
246:CPU_A21 is placed at pin 20 (MC 21)
247:CPU_A22 is placed at pin 18 (MC 24)
248:CPU_A23 is placed at pin 17 (MC 25)
249:CPU_RESET is placed at pin 16 (MC 27)
250:CLK_16M is placed at pin 15 (MC 29)
251:TDI is placed at pin 14 (MC 32)
252:CPU_A12 is placed at pin 31 (MC 35)
253:CPU_A13 is placed at pin 30 (MC 37)
254:CPU_A14 is placed at pin 29 (MC 38)
255:CPU_A15 is placed at pin 28 (MC 40)
256:CPU_A16 is placed at pin 27 (MC 43)
257:CPU_A17 is placed at pin 25 (MC 45)
258:CPU_A18 is placed at pin 24 (MC 46)
259:TMS is placed at pin 23 (MC 48)
260:DTACK_FROM_INT is placed at pin 41 (MC 49)
261:CPU_FC0 is placed at pin 40 (MC 51)
262:CPU_FC1 is placed at pin 39 (MC 53)
263:CPU_FC2 is placed at pin 37 (MC 56)
264:CPU_A8 is placed at pin 36 (MC 57)
265:CPU_A9 is placed at pin 35 (MC 59)
266:CPU_A10 is placed at pin 34 (MC 61)
267:CPU_A11 is placed at pin 33 (MC 64)
268:CPU_BG is placed at pin 44 (MC 65)
269:CPU_DTACK is placed at pin 45 (MC 67)

LISTING FOR LOGIC DESCRIPTION FILE: ADDRDECODE.pld                   Page 6

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Mon May 16 09:48:27 2022

270:SBUS_BUFFER_D_DIR is placed at pin 46 (MC 69)
271:SBUS_BUFFER_ACD_EN is placed at pin 48 (MC 72)
272:WORKER_RESET_PRESENCE_LATCH_CS is placed at pin 49 (MC 73)
273:WORKER_BARRIER_CS is placed at pin 50 (MC 75)
274:SBUS_BUFFER_AC_DIR is placed at pin 51 (MC 77)
275:NIC_CS is placed at pin 52 (MC 80)
276:K8042_CS is placed at pin 54 (MC 83)
277:PTC_CS is placed at pin 55 (MC 85)
278:RTS_AD_SEL is placed at pin 56 (MC 86)
279:RTS_CS is placed at pin 57 (MC 88)
280:LED_LATCH_CS is placed at pin 58 (MC 91)
281:SEVENSEG_LATCH_CS is placed at pin 60 (MC 93)
282:UART_CSB is placed at pin 61 (MC 94)
283:TCK is placed at pin 62 (MC 96)
284:UART_CSA is placed at pin 63 (MC 97)
285:IDE_CSB is placed at pin 64 (MC 99)
286:IDE_CSA is placed at pin 65 (MC 101)
287:WORKER_BUS_GRANT is placed at pin 67 (MC 104)
288:WORKER_BUS_REQUEST is placed at pin 69 (MC 107)
289:DRAM_CS is placed at pin 70 (MC 109)
290:TDO is placed at pin 71 (MC 112)
291:FLASH_WE is placed at pin 73 (MC 115)
292:FLASH_A18 is placed at pin 74 (MC 117)
293:FLASH_HIGH_CS is placed at pin 75 (MC 118)
294:FLASH_LOW_CS is placed at pin 76 (MC 120)
295:SRAM0_HIGH_CS is placed at pin 77 (MC 123)
296:SRAM0_LOW_CS is placed at pin 79 (MC 125)
297:MEM_OE is placed at pin 80 (MC 126)
298:CPU_RESET_IN is placed at pin 81 (MC 128)
299:
300:
301:                                                                                    
302:                                                 C   S     F                        
303:                                                 P   R     L                        
304:                                                 U   A     A                        
305:                                                 _   M     S                        
306:                                                 R   0     H                        
307:                                  C C        C   E   _     _                        
308:                     C C  C C   C P P   C    L   S M L     L                        
309:                     P P  P P   P U U   P    K   E E O     O                        
310:                     U U  U U   U _ _   U    _   T M W     W                        
311:                     _ _  _ _ G _ U L V _    3 G _ _ _ V   _                        
312:                     D D  D D N A D D C R    2 N I O C C   C                        
313:                     3 2  1 0 D S S S C W    M D N E S C   S                        
314:                    -------------------------------------------                     
315:                   / 11   9   7   5   3   1  83  81  79  77  75 \                  
316:                  /    10   8   6   4   2  84  82  80  78  76    \                 
317:Y_SETUP_LATCH_CS | 12                    (*)                   74 | FLASH_A18       
318:             VCC | 13                                          73 | FLASH_WE        
319:             TDI | 14                                          72 | GND             
320:         CLK_16M | 15                                          71 | TDO             
321:       CPU_RESET | 16                                          70 | DRAM_CS         
322:         CPU_A23 | 17                                          69 | WORKER_BUS_REQUEST
323:         CPU_A22 | 18                                          68 |                 

LISTING FOR LOGIC DESCRIPTION FILE: ADDRDECODE.pld                   Page 7

CUPL(WM): Universal Compiler for Programmable Logic
Version 5.0a Serial# 60008009
Copyright (c) 1983, 1998 Logical Devices, Inc.
Created Mon May 16 09:48:27 2022

324:             GND | 19                                          67 | WORKER_BUS_GRANT
325:         CPU_A21 | 20                                          66 | VCC             
326:         CPU_A20 | 21                                          65 | IDE_CSA         
327:         CPU_A19 | 22                 ATF1508                  64 | IDE_CSB         
328:             TMS | 23               84-Lead PLCC               63 | UART_CSA        
329:         CPU_A18 | 24                                          62 | TCK             
330:         CPU_A17 | 25                                          61 | UART_CSB        
331:             VCC | 26                                          60 | SEVENSEG_LATCH_CS
332:         CPU_A16 | 27                                          59 | GND             
333:         CPU_A15 | 28                                          58 | LED_LATCH_CS    
334:         CPU_A14 | 29                                          57 | RTS_CS          
335:         CPU_A13 | 30                                          56 | RTS_AD_SEL      
336:         CPU_A12 | 31                                          55 | PTC_CS          
337:             GND | 32                                          54 | K8042_CS        
338:                  \     34  36  38  40  42  44  46  48  50  52   /                 
339:                   \  33  35  37  39  41  43  45  47  49  51  53/                  
340:                    --------------------------------------------                     
341:                      C C C C C V C C D G V C C S G S W W S N V                     
342:                      P P P P P C P P T N C P P B N B O O B I C                     
343:                      U U U U U C U U A D C U U U D U R R U C C                     
344:                      _ _ _ _ _   _ _ C     _ _ S   S K K S _                       
345:                      A A A A F   F F K     B D _   _ E E _ C                       
346:                      1 1 9 8 C   C C _     G T B   B R R B S                       
347:                      1 0     2   1 0 F       A U   U _ _ U                         
348:                                      R       C F   F R B F                         
349:                                      O       K F   F E A F                         
350:                                      M         E   E S R E                         
351:                                      _         R   R E R R                         
352:                                      I         _   _ T I _                         
353:                                      N         D   A _ E A                         
354:
355:
356:
357:*/
358:
359:



